[{"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\index.js":"1","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\App.js":"2","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Login.js":"3","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Signup.js":"4","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthContext.js":"5","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthState.js":"6","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\axios\\AuthApi.js":"7","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\utils\\setAuthToken.js":"8","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\types.js":"9","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthReducer.js":"10","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\axios\\GeneralApi.js":"11","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Community.js":"12","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Header.js":"13","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\utils\\theme.js":"14","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\ColorModeSwitch.js":"15","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Profile.js":"16","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppState.js":"17","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppContext.js":"18","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppReducer.js":"19","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\AddProfile.js":"20","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Recommandations.js":"21","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Recommandation.js":"22"},{"size":327,"mtime":1611460208516,"results":"23","hashOfConfig":"24"},{"size":1290,"mtime":1612435164231,"results":"25","hashOfConfig":"24"},{"size":2531,"mtime":1612185128045,"results":"26","hashOfConfig":"24"},{"size":2941,"mtime":1612185083123,"results":"27","hashOfConfig":"24"},{"size":105,"mtime":1611282743008,"results":"28","hashOfConfig":"24"},{"size":2981,"mtime":1612266162589,"results":"29","hashOfConfig":"24"},{"size":131,"mtime":1611630977037,"results":"30","hashOfConfig":"24"},{"size":275,"mtime":1611283873900,"results":"31","hashOfConfig":"24"},{"size":681,"mtime":1612624511854,"results":"32","hashOfConfig":"24"},{"size":2061,"mtime":1612265724480,"results":"33","hashOfConfig":"24"},{"size":101,"mtime":1611741012225,"results":"34","hashOfConfig":"24"},{"size":5074,"mtime":1611908552292,"results":"35","hashOfConfig":"24"},{"size":5809,"mtime":1612265669495,"results":"36","hashOfConfig":"24"},{"size":359,"mtime":1611462598743,"results":"37","hashOfConfig":"24"},{"size":452,"mtime":1611460162337,"results":"38","hashOfConfig":"24"},{"size":23700,"mtime":1612266149000,"results":"39","hashOfConfig":"24"},{"size":4366,"mtime":1612624505869,"results":"40","hashOfConfig":"24"},{"size":103,"mtime":1611817859849,"results":"41","hashOfConfig":"24"},{"size":1846,"mtime":1612624492169,"results":"42","hashOfConfig":"24"},{"size":6412,"mtime":1612265488183,"results":"43","hashOfConfig":"24"},{"size":8537,"mtime":1612625088427,"results":"44","hashOfConfig":"24"},{"size":3413,"mtime":1612626265797,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1cvufhj",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\index.js",[],["99","100"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\App.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Login.js",["101","102","103"],"import {useState,useContext,useEffect} from 'react'\r\nimport AuthContext from '../context/auth/AuthContext'\r\n\r\nimport {Flex,\r\n    Box,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    useToast } from \"@chakra-ui/react\"\r\n\r\nconst Login = props => {\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {login,isAuthenticated,error,user} = authContext\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    const errorToast = useToast()\r\n\r\n    const onChangeUsername = e => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = e => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n                if(error !== null){\r\n                    setUsername('')\r\n                    setPassword('')\r\n                }\r\n\r\n                if(isAuthenticated == true){\r\n                      props.history.push('/community')\r\n                }\r\n               \r\n\r\n        \r\n    }, [error,isAuthenticated]);\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if(username !== '' && password !== ''){\r\n            const data = {\r\n                username,\r\n                password\r\n            }\r\n            login(data)\r\n        }else{\r\n          errorToast({\r\n            title: 'Empty Fields',\r\n            description: \"Fill all the fields.\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n        })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n        <Box bg=\"brand.100\" p={8} maxWidth=\"500px\" borderWidth={1} borderRadius={8} boxShadow=\"lg\" marginTop={50}>\r\n          <Box textAlign=\"center\">\r\n            <Heading>Login</Heading>\r\n          </Box>\r\n          <Box my={4} textAlign=\"left\">\r\n            <form onSubmit={onSubmit}>\r\n              <FormControl>\r\n                <FormLabel>Username</FormLabel>\r\n                <Input type=\"text\" value={username} placeholder=\"test\" onChange={onChangeUsername} />\r\n              </FormControl>\r\n              <FormControl mt={6}>\r\n                <FormLabel>Password</FormLabel>\r\n                <Input type=\"password\" value={password} placeholder=\"*******\" onChange={onChangePassword} />\r\n              </FormControl>\r\n              <Button width=\"full\" mt={4} type=\"submit\">\r\n                Sign In\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Signup.js",["104"],"import {useState,useContext,useEffect} from 'react'\r\nimport AuthContext from '../context/auth/AuthContext'\r\n\r\nimport {Flex,\r\n    Box,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    useToast } from \"@chakra-ui/react\"\r\n\r\nconst Signup = props => {\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {signup,isRegistered,error} = authContext\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    const errorToast = useToast()\r\n\r\n\r\n    const onChangeUsername = e => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const onChangeEmail = e => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = e => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n                if(error !== null){\r\n                    setUsername('')\r\n                    setPassword('')\r\n                }\r\n\r\n                if(isRegistered == true){\r\n                      props.history.push('/login')\r\n                }\r\n               \r\n\r\n        \r\n    }, [error,isRegistered,props.history]);\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if(username !== '' && password !== '' && email !== ''){\r\n            const data = {\r\n                username,\r\n                email,\r\n                password,\r\n                roles: [\"user\"]\r\n            }\r\n            signup(data)\r\n        }else{\r\n          errorToast({\r\n            title: 'Empty Fields',\r\n            description: \"Fill all the fields.\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n        })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n        <Box bg=\"brand.100\" p={8} maxWidth=\"500px\" borderWidth={1} borderRadius={8} boxShadow=\"lg\" marginTop={50}>\r\n          <Box textAlign=\"center\">\r\n            <Heading>Sign Up</Heading>\r\n          </Box>\r\n          <Box my={4} textAlign=\"left\">\r\n            <form onSubmit={onSubmit}>\r\n              <FormControl>\r\n                <FormLabel>Username</FormLabel>\r\n                <Input type=\"text\" value={username} placeholder=\"test\" onChange={onChangeUsername} />\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel>Email</FormLabel>\r\n                <Input type=\"text\" value={email} placeholder=\"test@mail.com\" onChange={onChangeEmail} />\r\n              </FormControl>\r\n              <FormControl mt={6}>\r\n                <FormLabel>Password</FormLabel>\r\n                <Input type=\"password\" value={password} placeholder=\"*******\" onChange={onChangePassword} />\r\n              </FormControl>\r\n              <Button width=\"full\" mt={4} type=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthContext.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthState.js",["105"],"import React, { useReducer } from 'react';\r\nimport AuthContext from './AuthContext'\r\nimport AuthReducer from './AuthReducer'\r\nimport authApi from '../../axios/AuthApi'\r\nimport generalApi from '../../axios/GeneralApi'\r\nimport setAuthToken from '../../utils/setAuthToken'\r\n\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_SUCCESS,\r\n    PERSIST_PROFILE,\r\n    REGISTER_FAIL,\r\n    LOGOUT\r\n} from '../types'\r\n\r\nconst AuthState = props => {\r\n\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        isAuthenticated: localStorage.getItem('isAuth'),\r\n        isRegistered: false,\r\n        user: JSON.parse(localStorage.getItem('user')) ,\r\n        profile: JSON.parse(localStorage.getItem('profile')),\r\n        error: null\r\n    }\r\n\r\n   const [state, dispatch] = useReducer(AuthReducer, initialState)\r\n\r\n   // Action :\r\n\r\n\r\n   const addProfile = async data => {\r\n    \r\n    setAuthToken(localStorage.token)\r\n    //console.log('Hey update here')\r\n    try{\r\n     \r\n    const res = await generalApi.post('/api/profiles',data)\r\n\r\n    dispatch({\r\n        type: PERSIST_PROFILE,\r\n        payload: res.data\r\n    })\r\n    \r\n\r\n    } catch(err){\r\n        console.log(err.message)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n   // Login User\r\n   const login = async formData => {\r\n\r\n    try {\r\n        const res = await authApi.post('/api/auth/signin', formData)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        setAuthToken(res.data.accessToken)\r\n        loadProfile(res.data.id)\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: 'Invalid Credentials!'\r\n        })\r\n    }\r\n}\r\n\r\n // Resister User\r\n const signup = async formData => {\r\n\r\n    try {\r\n       const res = await authApi.post('/api/auth/signup', formData)\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: REGISTER_FAIL,\r\n            payload: err.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Load User Profile\r\nconst loadProfile = async userId => {\r\n\r\n    try {\r\n       const res = await generalApi.get(`/api/profiles/user/${userId}`)\r\n       console.log('profile data : ',res.data)\r\n\r\n        dispatch({\r\n            type: PERSIST_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n   // Logout\r\n   const logout = () => {\r\n    dispatch({type: LOGOUT})\r\n    }\r\n\r\n\r\n   return (\r\n       <AuthContext.Provider \r\n       value={{\r\n           token: state.token,\r\n           isAuthenticated: state.isAuthenticated,\r\n           isRegistered: state.isRegistered,\r\n           user: state.user,\r\n           profile : state.profile,\r\n           error: state.error,\r\n           login,\r\n           signup,\r\n           loadProfile,\r\n           addProfile,\r\n           logout\r\n       }}>\r\n\r\n           {props.children}\r\n       </AuthContext.Provider>\r\n   )\r\n\r\n}\r\nexport default AuthState","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\axios\\AuthApi.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\types.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthReducer.js",["106"],"import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_SUCCESS,\r\n    PERSIST_PROFILE,\r\n    REGISTER_FAIL,\r\n    LOGOUT\r\n} from '../types'\r\n\r\n\r\nexport default (state,action) => {\r\n    switch(action.type){\r\n\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token',action.payload.accessToken)\r\n            localStorage.setItem('isAuth',\"true\")\r\n            localStorage.setItem('user',JSON.stringify(action.payload) )\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                token: action.payload.accessToken,\r\n                isAuthenticated: \"true\",\r\n                error: null\r\n            }\r\n            case LOGIN_FAIL:\r\n            case REGISTER_FAIL:\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('isAuth')\r\n            localStorage.removeItem('user')\r\n            return {\r\n                ...state,\r\n                token:null,\r\n                isAuthenticated: 'false',\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n                case REGISTER_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    isRegistered: true\r\n                }\r\n                case LOGOUT:\r\n                    localStorage.removeItem('token')\r\n                    localStorage.removeItem('user')\r\n                    localStorage.setItem('isAuth','false')\r\n                    localStorage.removeItem('profile')\r\n                    return {\r\n                        ...state,\r\n                        token:null,\r\n                        isAuthenticated: \"false\",\r\n                        user: null,\r\n                        profile: null,\r\n                        error: action.payload\r\n                    }\r\n            case PERSIST_PROFILE:\r\n                localStorage.setItem('profile',JSON.stringify(action.payload) )\r\n            return {\r\n                ...state,\r\n               profile: action.payload\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\axios\\GeneralApi.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Community.js",["107","108"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { Box,Avatar,Spacer,Button,IconButton,Text,Badge,Icon,RadioGroup,Stack,Radio,Select,Input,Heading,InputLeftElement,InputGroup, Flex, Center } from \"@chakra-ui/react\"\r\nimport { MdMyLocation, MdPermContactCalendar,MdSearch} from 'react-icons/md'\r\nimport moment from 'moment'\r\nimport AppContext from '../context/app/AppContext'\r\n\r\nconst Community = () => {\r\n\r\n    const history = useHistory()\r\n    \r\n    const appContext = useContext(AppContext)\r\n    const {communityProfiles,getProfiles} = appContext\r\n\r\n    const goToProfile = (id) => {\r\n      history.push(`/profile/${id}`)\r\n    }\r\n\r\n    const [gender, setGender] = useState('Male')\r\n\r\n    const [language, setLanguage] = useState('')\r\n\r\n    const [location, setLocation] = useState('')\r\n\r\n    const [age, setAge] = useState('')\r\n\r\n    const onChangeLanguage = e => {\r\n        setLanguage(e.target.value)\r\n    }\r\n    const onChangeLocation = e => {\r\n        setLocation(e.target.value)\r\n    }\r\n    const onChangeAge = e => {\r\n        setAge(e.target.value)\r\n    }\r\n    useEffect(() => {\r\n        getProfiles()\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n      \r\n        <Box textAlign=\"center\">\r\n            <Heading>Search For Locals</Heading>\r\n          </Box>\r\n          <br />\r\n         <Center>\r\n          <Flex gridColumnGap={4} gridRowGap={4}\r\n          justify={[\"center\", \"space-between\", \"flex-end\", \"flex-end\"]}\r\n          direction={[\"column\", \"row\", \"row\", \"row\"]}\r\n          pt={[4, 4, 0, 0]} spacing={3}>\r\n                <InputGroup>\r\n                    <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<Icon color=\"gray.300\" as={MdMyLocation} />}\r\n                    />\r\n                    <Input type=\"text\" placeholder=\"Location\" value={location} onChange={onChangeLocation} />\r\n                </InputGroup>\r\n               \r\n                <Flex align=\"center\">\r\n                <RadioGroup onChange={setGender} value={gender}>\r\n                <Stack direction=\"row\">\r\n                    <Radio value=\"Male\">Male</Radio>\r\n                    <Radio value=\"Female\">Female</Radio>\r\n                </Stack>\r\n                </RadioGroup>\r\n                </Flex>\r\n                \r\n\r\n                <Select placeholder=\"Language\" value={language} onChange={onChangeLanguage}>\r\n                    <option value=\"English\">English</option>\r\n                    <option value=\"French\">French</option>\r\n                    <option value=\"German\">German</option>\r\n                </Select>\r\n                \r\n\r\n                <InputGroup>\r\n                    <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<Icon color=\"gray.300\" as={MdPermContactCalendar} />}\r\n                    />\r\n                    <Input type=\"number\" placeholder=\"Age\" value={age} onChange={onChangeAge} />\r\n                </InputGroup>\r\n\r\n                <IconButton aria-label=\"Search database\" icon={<MdSearch />} />\r\n\r\n            </Flex>\r\n            </Center>\r\n\r\n<br />\r\n{communityProfiles.length !== 0 && \r\ncommunityProfiles.map(profile => <>\r\n\r\n<Flex marginLeft=\"80\" marginBottom='5' alignItems=\"center\" maxW=\"4xl\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" boxShadow=\"lg\">\r\n\r\n            <Box paddingLeft=\"4\">\r\n            <Avatar\r\n      size=\"xl\"\r\n      name=\"Kola Tioluwani\"\r\n      src={profile.profilePicture}\r\n    />  \r\n            </Box>\r\n      <Box p=\"6\">\r\n        <Box d=\"flex\" alignItems=\"baseline\">\r\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme={profile.sexe === 'Male' ? 'teal' : 'red'}>\r\n            {profile.sexe}\r\n          </Badge>\r\n        </Box>\r\n        <Box\r\n         \r\n        >\r\n          Fullname : {profile.fullName}\r\n        </Box>\r\n\r\n        <Box\r\n        >\r\n          Age : {moment.duration(moment().diff(moment(profile.birthDate,'DD-MM-YYYY'))).years()  }\r\n        </Box>\r\n\r\n        <Box\r\n            color=\"gray.500\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"wide\"\r\n            fontSize=\"xs\"\r\n            textTransform=\"uppercase\"\r\n          >\r\n          <Text> Languages: {profile.languages.length !== 0 ? \r\n          profile.languages.map((language,i) => profile.languages.length == i + 1 ? language : language + '\\u2022') : 'Not Specified' }</Text>\r\n          </Box>\r\n      \r\n      </Box>\r\n      <Flex direction=\"column\"\r\n      >\r\n          <Box mt=\"1\"\r\n      fontWeight=\"semibold\"\r\n      as=\"h4\"\r\n      lineHeight=\"tight\"\r\n      isTruncated>\r\n        Bio: \r\n          </Box>\r\n          <Box overflow=\"hidden\">\r\n              {profile.description}\r\n          </Box>\r\n      </Flex>\r\n      <Spacer />\r\n      <Flex direction=\"column\" alignItems=\"center\" paddingRight=\"2\">\r\n      <Button onClick={() => goToProfile(profile.user)} colorScheme=\"blue\">See profile</Button>\r\n      <br />\r\n      <Button colorScheme=\"blue\">Contact</Button>\r\n      </Flex>\r\n    </Flex>\r\n\r\n</>)\r\n\r\n\r\n\r\n}\r\n\r\n          </>  \r\n        \r\n    )\r\n}\r\n\r\nexport default Community\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Header.js",["109","110","111"],"import React,{useContext} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Flex, Text, Button, Avatar, AvatarBadge, IconButton, Icon,Image } from \"@chakra-ui/react\";\r\nimport ColorModeSwitch from './ColorModeSwitch'\r\nimport AuthContext from '../context/auth/AuthContext'\r\nimport { MdPowerSettingsNew } from \"react-icons/md\";\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst MenuItem = ({ children, isLast, to = \"/\", ...rest }) => {\r\n\r\n  return (\r\n    <Text\r\n      mb={{ base: isLast ? 0 : 8, sm: 0 }}\r\n      mr={{ base: 0, sm: isLast ? 0 : 8 }}\r\n      display=\"block\"\r\n      {...rest}\r\n    >\r\n      <Link to={to}>{children}</Link>\r\n    </Text>\r\n  );\r\n};\r\n\r\nconst CloseIcon = () => (\r\n  <svg width=\"24\" viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <title>Close</title>\r\n    <path\r\n      fill=\"white\"\r\n      d=\"M9.00023 7.58599L13.9502 2.63599L15.3642 4.04999L10.4142 8.99999L15.3642 13.95L13.9502 15.364L9.00023 10.414L4.05023 15.364L2.63623 13.95L7.58623 8.99999L2.63623 4.04999L4.05023 2.63599L9.00023 7.58599Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst MenuIcon = () => (\r\n  <svg\r\n    width=\"24px\"\r\n    viewBox=\"0 0 20 20\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"white\"\r\n  >\r\n    <title>Menu</title>\r\n    <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\r\n  </svg>\r\n);\r\n\r\nconst Header = (props) => {\r\n  const [show, setShow] = React.useState(false);\r\n  const toggleMenu = () => setShow(!show);\r\n\r\n  const history = useHistory()\r\n\r\n  const authContext = useContext(AuthContext)\r\n  const {profile,isAuthenticated, logout,user} = authContext \r\n\r\n  const onLogout = () => {\r\n    logout()\r\n     history.push('/login')\r\n  }\r\n  const goToProfile = (id) => {\r\n    history.push(`/profile/${id}`)\r\n  }\r\n  const goToAddProfile = () => {\r\n    history.push(`/profile/add`)\r\n  }\r\n  \r\n\r\n  const authLinks = (\r\n    <>\r\n    { profile !== null && <>\r\n    <Flex cursor=\"pointer\" onClick={() => goToProfile(profile.user)} marginRight='7px'>\r\n  <Avatar src={profile.profilePicture} />\r\n  <Box ml=\"3\">\r\n    <Text color=\"white\" fontWeight=\"bold\">\r\n      {profile.fullName}\r\n    </Text>\r\n    <Text fontSize=\"sm\" color=\"white\">{profile.city}</Text>\r\n  </Box>\r\n</Flex>\r\n<Button marginRight='6px' onClick={onLogout}>\r\n  <Icon color=\"#C62828\" w={8} h={8} as={MdPowerSettingsNew} />\r\n</Button>\r\n</>\r\n}\r\n    </>\r\n  )\r\n  const guestLinks = (\r\n    \r\n    <>\r\n    {user !== null ? <> <Button\r\n              size=\"sm\"\r\n              rounded=\"md\"\r\n              color={[\"primary.500\", \"primary.500\", \"white\", \"white\"]}\r\n              bg={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}\r\n              _hover={{\r\n                bg: [\"primary.100\", \"primary.100\", \"primary.600\", \"primary.600\"]\r\n              }}\r\n              marginRight='18px'\r\n              onClick={() => goToAddProfile(user.id)}\r\n            >\r\n              Add Profile\r\n            </Button> \r\n            <Button marginRight='6px' onClick={onLogout}>\r\n              <Icon color=\"#C62828\" w={8} h={8} as={MdPowerSettingsNew} />\r\n            </Button>\r\n            </> :\r\n          \r\n          <>\r\n    <MenuItem to=\"/login\" isLast={false}>\r\n            <Button\r\n              size=\"sm\"\r\n              rounded=\"md\"\r\n              color={[\"primary.500\", \"primary.500\", \"white\", \"white\"]}\r\n              bg={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}\r\n              _hover={{\r\n                bg: [\"primary.100\", \"primary.100\", \"primary.600\", \"primary.600\"]\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n          </MenuItem>\r\n          <MenuItem to=\"/signup\" isLast={false}>\r\n            <Button\r\n              size=\"sm\"\r\n              rounded=\"md\"\r\n              color={[\"primary.500\", \"primary.500\", \"white\", \"white\"]}\r\n              bg={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}\r\n              _hover={{\r\n                bg: [\"primary.100\", \"primary.100\", \"primary.600\", \"primary.600\"]\r\n              }}\r\n            >\r\n              Create Account\r\n            </Button>\r\n          </MenuItem>\r\n          </>\r\n          \r\n          \r\n          }\r\n    \r\n    </>\r\n  )\r\n\r\n\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      w=\"100%\"\r\n      mb={8}\r\n      p={8}\r\n      bg={[\"primary.800\", \"primary.800\", \"primary.800\", \"primary.800\"]}\r\n      color={[\"white\", \"white\", \"primary.700\", \"primary.700\"]}\r\n      {...props}\r\n    >\r\n\r\n    <Flex align=\"center\">\r\n    <Box w=\"200px\"\r\n          color={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}>\r\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\r\n        World Traveler\r\n      </Text>\r\n     \r\n\r\n    </Box>\r\n   {/* <Image boxSize=\"50px\" src=\"https://res.cloudinary.com/oelmounkad/image/upload/v1612190965/headerpic_tmzbtw.png\" alt=\"naruto\" objectFit=\"cover\" />*/}\r\n      </Flex>\r\n\r\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={toggleMenu}>\r\n        {show ? <CloseIcon /> : <MenuIcon />}\r\n      </Box>\r\n\r\n      \r\n    \r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\r\n        flexBasis={{ base: \"100%\", md: \"auto\" }}\r\n      >\r\n\r\n        <Flex\r\n          align=\"center\"\r\n          justify={[\"center\", \"space-between\", \"flex-end\", \"flex-end\"]}\r\n          direction={[\"column\", \"row\", \"row\", \"row\"]}\r\n          pt={[4, 4, 0, 0]}\r\n        >\r\n          <MenuItem to=\"/\">Home</MenuItem>\r\n          <MenuItem to=\"/community\">Community </MenuItem>\r\n          <MenuItem to=\"/messages\">Messages </MenuItem>\r\n          <MenuItem to=\"/recommandations\">Recommandations </MenuItem>\r\n          <MenuItem to=\"/questions\">Q&A </MenuItem>\r\n          { isAuthenticated === \"true\" && profile !== null ? authLinks : guestLinks}\r\n          <ColorModeSwitch />\r\n        </Flex>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\utils\\theme.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\ColorModeSwitch.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Profile.js",["112","113","114","115","116","117","118"],"import React,{useEffect,useContext,useState} from 'react'\r\nimport {AddIcon, EditIcon} from \"@chakra-ui/icons\"\r\nimport {Box ,Input,Flex,Modal,ModalOverlay,ModalContent,Spinner,ModalCloseButton,ModalBody,ModalFooter, useDisclosure ,Text,Image, Icon, Spacer, Button, Heading, Textarea, Select, IconButton, Center} from \"@chakra-ui/react\"\r\nimport {MdEdit,MdPermContactCalendar,MdPersonAdd,MdChat, MdFavorite, MdGroupWork, MdLanguage, MdFitnessCenter, MdSave, MdKeyboardReturn} from 'react-icons/md'\r\nimport AppContext from '../context/app/AppContext'\r\nimport AuthContext from '../context/auth/AuthContext'\r\nimport moment from 'moment'\r\n\r\nconst Profile = props => {\r\n\r\n    \r\n    let hiddenInput = null\r\n    let hiddenInput2 = null\r\n    const { match: { params } } = props \r\n\r\n    const appContext = useContext(AppContext)\r\n    const {getChosenProfile,chosenProfile,updateProfile,addPhotoToPortfolio,editProfilePhoto} = appContext\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {user} = authContext\r\n\r\n    const [modalImage, setModalImage] = useState('')\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [editedProfile,setEditedProfile] = useState({})\r\n    const [editedBirthday, setEditedBirthday] = useState({\r\n        day:'',month:'',year:''\r\n    })\r\n\r\n    useEffect(() => {\r\n        getChosenProfile(params.id)\r\n    }, [])\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(chosenProfile !== null){\r\n            setEditedProfile({...editedProfile,\r\n                ...chosenProfile\r\n        })\r\n        let day = moment(chosenProfile.birthDate,'DD-MM-YYYY').date()\r\n        let month = moment(chosenProfile.birthDate,'DD-MM-YYYY').month()+1\r\n        let year = moment(chosenProfile.birthDate,'DD-MM-YYYY').year()\r\n        setEditedBirthday({...editedBirthday, day,month,year })\r\n\r\n        }\r\n    }, [chosenProfile])\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    const handleOpen = image => {\r\n        setModalImage(image)\r\n        onOpen()\r\n    }\r\n\r\n    const onChangeEdited = e => {\r\n        setEditedProfile({...editedProfile,\r\n                    [e.target.name]:e.target.value\r\n            })\r\n    }\r\n\r\n    const onChangeSelectLanguage = e => {\r\n        if(!editedProfile.languages.includes(e.target.value)){\r\n            setEditedProfile({...editedProfile,\r\n                    [e.target.name]:[...editedProfile.languages,e.target.value]\r\n            })\r\n        }else{\r\n            setEditedProfile({...editedProfile,\r\n                [e.target.name]:editedProfile.languages.filter(lang => lang !== e.target.value)\r\n        })\r\n        }\r\n        \r\n    }\r\n\r\n    const onChangeSelectHobby = e => {\r\n        if(!editedProfile.hobbies.includes(e.target.value)){\r\n            setEditedProfile({...editedProfile,\r\n                    [e.target.name]:[...editedProfile.hobbies,e.target.value]\r\n            })\r\n        }else{\r\n            setEditedProfile({...editedProfile,\r\n                [e.target.name]:editedProfile.hobbies.filter(hob => hob !== e.target.value)\r\n        })\r\n        }\r\n        \r\n    }\r\n\r\n    const onChangeEditedBirthday = e => {\r\n        setEditedBirthday({...editedBirthday,\r\n                [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    \r\n    const [fileInputState, setFileInputState] = useState('')\r\n    const [fileInputState2, setFileInputState2] = useState('')\r\n    const [previewSource, setPreviewSource] = useState('');\r\n    const [previewSource2, setPreviewSource2] = useState('');\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [selectedFile2, setSelectedFile2] = useState();\r\n\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file instanceof Blob){\r\n            previewFile(file);\r\n        setSelectedFile(file);\r\n        setFileInputState(e.target.value);\r\n        }else{\r\n            setPreviewSource('');\r\n            setFileInputState('');\r\n        }\r\n        \r\n    }\r\n                        const handleFileInputChange2 = (e) => {\r\n                            const file = e.target.files[0];\r\n                            if(file instanceof Blob){\r\n                            previewFile2(file);\r\n                            setSelectedFile2(file);\r\n                            setFileInputState2(e.target.value);\r\n                            }else{\r\n                                setPreviewSource2('');\r\n                                setFileInputState2('');\r\n                            }\r\n                            \r\n                        }\r\n                        const handleSetProfilePhoto = () => {\r\n                            if (!selectedFile2) return;\r\n                            const reader = new FileReader();\r\n                            reader.readAsDataURL(selectedFile2);\r\n                            reader.onloadend = () => {\r\n                                let data = {profilePicture:reader.result}\r\n                                console.log('data : ',data)\r\n                                editProfilePhoto(data,chosenProfile._id)\r\n                                \r\n                                setFileInputState2('')\r\n                                setPreviewSource2('')\r\n                                \r\n                            }\r\n                        }\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        };\r\n    };\r\n\r\n    const previewFile2 = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource2(reader.result);\r\n        };\r\n    };\r\n\r\n    const addPhotoToPortfolioLocal = () => {\r\n        if (!selectedFile) return;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(selectedFile);\r\n        reader.onloadend = () => {\r\n            let data = {portfolio:reader.result}\r\n            addPhotoToPortfolio(data,chosenProfile._id)\r\n            setFileInputState('')\r\n            setPreviewSource('')\r\n        }\r\n        \r\n        \r\n\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        let birthDate = editedBirthday.day+\"-\"+editedBirthday.month+\"-\"+editedBirthday.year\r\n        editedProfile.birthDate = birthDate\r\n        updateProfile(editedProfile)\r\n        setEditMode(false)\r\n    }\r\n\r\n    const [showAddingButton, setShowAddingButton] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if(previewSource !== ''){\r\n            setShowAddingButton(false)\r\n        }else{\r\n            setShowAddingButton(true)\r\n        }\r\n    }, [previewSource]);\r\n\r\n    return (\r\n        <>\r\n        {chosenProfile !== null ? \r\n        \r\n        <Flex direction=\"row\">\r\n\r\n            {/** Profile pic + infos */}\r\n                <Flex direction=\"column\" marginLeft='12'>\r\n\r\n                                        {/** Profile Photo add button */}\r\n                                                                        \r\n                                        <Input  \r\n                                        type=\"file\" \r\n                                        hidden\r\n                                        ref={el => hiddenInput2 = el}\r\n                                        id=\"fileInput\"\r\n                                        class=\"form-control-file\" \r\n                                        onChange={handleFileInputChange2}\r\n                                        value={fileInputState2}\r\n                                        />\r\n                                        {/** Profile image load button */}\r\n                                        {chosenProfile.user == user.id && \r\n                                        <IconButton\r\n                                            variant=\"outline\"\r\n                                            colorScheme=\"teal\"\r\n                                            aria-label=\"Send email\"\r\n                                            width=\"40px\"\r\n                                            onClick={() => hiddenInput2.click()}\r\n                                            icon={<EditIcon />}\r\n                                            />}\r\n\r\n                                            {/** Preview of profile photo */}\r\n                                    {previewSource2 && (\r\n                                        <Center>\r\n                                        <Flex direction=\"column\">\r\n                                        \r\n                                             <Image\r\n                                        src={previewSource2}\r\n                                        alt=\"chosen\"\r\n                                        boxSize=\"300px\"\r\n                                    />\r\n                                     <Button width=\"200px\" onClick={handleSetProfilePhoto} >Add Image</Button>\r\n                                        \r\n                                   </Flex></Center>\r\n                                )}\r\n\r\n                    <Box border=\"2px\" borderColor=\"gray.500\">\r\n                    \r\n                        <Image border=\"2px\" borderColor=\"black.100\" m='1.5' marginBottom='2' boxSize=\"300px\" src={chosenProfile.profilePicture} alt=\"naruto\" objectFit=\"cover\" />\r\n                   \r\n                            {/** Followers */}\r\n                        <Flex my='2' alignItems=\"center\" direction=\"row\" bg=\"#EEEEEE\" px=\"1\" mx=\"1\" borderRadius=\"3px\" boxShadow=\"base\" >\r\n                                <Icon color=\"#BDBDBD\" w={8} h={8} as={MdFavorite} />\r\n                                &nbsp;  <Text color=\"#9E9E9E\" fontSize=\"md\" fontWeight=\"bold\" fontFamily=\"sans-serif\">Friends</Text> \r\n                                <Spacer />\r\n                                <Box bg=\"#1976D2\" borderColor=\"blue.500\" borderRadius=\"full\" > \r\n                                    <Text px='1' color=\"white\" fontFamily=\"sans-serif\" fontSize=\"sm\" >70</Text>\r\n                                </Box>\r\n                           </Flex>\r\n                            \r\n                           {/** Meetings */}\r\n                           <Flex my='2' alignItems=\"center\" direction=\"row\" bg=\"#EEEEEE\" px=\"1\" mx=\"1\" borderRadius=\"3px\" boxShadow=\"base\">\r\n                                    <Icon color=\"#BDBDBD\" w={8} h={8} as={MdGroupWork} />\r\n                                &nbsp;  <Text color=\"#9E9E9E\" fontSize=\"md\" fontWeight=\"bold\" fontFamily=\"sans-serif\">Meetings</Text> \r\n                                <Spacer />\r\n                                <Box bg=\"#1976D2\" borderColor=\"blue.500\" borderRadius=\"full\" > \r\n                                    <Text px='1' color=\"white\" fontFamily=\"sans-serif\" fontSize=\"sm\" >120</Text>\r\n                                </Box>\r\n                           </Flex>\r\n\r\n                           {/** Languages */}\r\n                           <Flex my='2' alignItems=\"center\" direction=\"row\" bg=\"#EEEEEE\" px=\"1\" mx=\"1\" borderRadius=\"3px\" boxShadow=\"base\">\r\n                                    <Icon color=\"#BDBDBD\" w={8} h={8} as={MdLanguage} />\r\n                                &nbsp;  <Text color=\"#9E9E9E\" fontSize=\"md\" fontWeight=\"bold\" fontFamily=\"sans-serif\">Languages</Text> \r\n                                <Spacer />\r\n                                 \r\n                                    <Text px='1' color=\"#9E9E9E\" fontFamily=\"sans-serif\" fontSize=\"sm\" >\r\n                                    {chosenProfile.languages && chosenProfile.languages.length !== 0 ? \r\n                                    chosenProfile.languages.map((language,i) => chosenProfile.languages.length == i + 1 ? language : language + '\\u2022') : 'Not Specified' }\r\n\r\n                                    </Text>\r\n                               \r\n                           </Flex>\r\n\r\n                           {/** Age */}\r\n                           <Flex my='2' alignItems=\"center\" direction=\"row\" bg=\"#EEEEEE\" px=\"1\" mx=\"1\" borderRadius=\"3px\" boxShadow=\"base\">\r\n                                    <Icon color=\"#BDBDBD\" w={8} h={8} as={MdPermContactCalendar} />\r\n                                &nbsp;  <Text color=\"#9E9E9E\" fontSize=\"md\" fontWeight=\"bold\" fontFamily=\"sans-serif\">Age</Text> \r\n                                <Spacer />\r\n                                <Box bg=\"#1976D2\" borderColor=\"blue.500\" borderRadius=\"full\" > \r\n                                    <Text px='1' color=\"white\" fontFamily=\"sans-serif\" fontSize=\"sm\" >\r\n                                        \r\n                                        {moment.duration(moment().diff(moment(chosenProfile.birthDate,'DD-MM-YYYY'))).years()}\r\n                                        \r\n                                    </Text>\r\n                                </Box>\r\n                           </Flex>\r\n\r\n                            {/** Hobbies */}\r\n                            <Flex my='2' alignItems=\"center\" direction=\"row\" bg=\"#EEEEEE\" px=\"1\" mx=\"1\" borderRadius=\"3px\" boxShadow=\"base\">\r\n                                    <Icon color=\"#BDBDBD\" w={8} h={8} as={MdFitnessCenter} />\r\n                                &nbsp;  <Text color=\"#9E9E9E\" fontSize=\"md\" fontWeight=\"bold\" fontFamily=\"sans-serif\">Hobbies</Text> \r\n                                <Spacer />\r\n                                \r\n                                    <Text px='1' color=\"#9E9E9E\" fontFamily=\"sans-serif\" fontSize=\"sm\" >\r\n                                    {chosenProfile.hobbies && chosenProfile.hobbies.length !== 0 ? \r\n                                    chosenProfile.hobbies.map((hobby,i) => chosenProfile.hobbies.length == i + 1 ? hobby : hobby + '\\u2022') : 'Not Specified' }\r\n                                    </Text>\r\n                               \r\n                           </Flex>\r\n                                {/** Buttons */}\r\n                        { chosenProfile.user !== user.id ?  \r\n                        \r\n                        <Flex direction=\"row\">\r\n                           <Button marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdPersonAdd} />\r\n                                <Text>Add Friend</Text>\r\n                            </Button>\r\n                            <Button marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdChat} />\r\n                                <Text>Contact</Text>\r\n                            </Button>\r\n                           </Flex> \r\n                           :\r\n                           \r\n                           <Flex direction=\"row\">\r\n                           <Button onClick={() => setEditMode(true)} marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdEdit} />\r\n                                <Text>Edit Profile</Text>\r\n                            </Button>\r\n                            <Button marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdPermContactCalendar} />\r\n                                <Text>Meetings</Text>\r\n                            </Button>\r\n                           </Flex> \r\n                        }\r\n                           \r\n\r\n                    </Box>\r\n\r\n                </Flex>\r\n\r\n\r\n\r\n             {/** portfolio + desc */}\r\n\r\n                <Flex direction=\"column\">\r\n                                        \r\n\r\n                                  {/** Preview of photo */}\r\n                                    {previewSource && (\r\n                                        <Center>\r\n                                        <Flex direction=\"column\">\r\n                                        \r\n                                             <Image\r\n                                        src={previewSource}\r\n                                        alt=\"chosen\"\r\n                                        boxSize=\"300px\"\r\n                                    />\r\n                                     <Button width=\"200px\" onClick={addPhotoToPortfolioLocal}  hidden={showAddingButton}>Add To portfolio</Button>\r\n                                        \r\n                                   </Flex></Center>\r\n                                )}\r\n                               \r\n                                \r\n\r\n\r\n                                        {/** Portfolio hidden add button */}\r\n                                                                        \r\n                                        <Input  \r\n                                        type=\"file\" \r\n                                        hidden\r\n                                        ref={el => hiddenInput = el}\r\n                                        id=\"fileInput\"\r\n                                        class=\"form-control-file\" \r\n                                        onChange={handleFileInputChange}\r\n                                        value={fileInputState}\r\n                                        />\r\n                                        {/** Portfolio image load button */}\r\n                                        {chosenProfile.user == user.id && \r\n                                        <IconButton\r\n                                            marginLeft=\"200\"\r\n                                            variant=\"outline\"\r\n                                            colorScheme=\"teal\"\r\n                                            aria-label=\"Send email\"\r\n                                            width=\"40px\"\r\n                                            onClick={() => hiddenInput.click()}\r\n                                            icon={<AddIcon />}\r\n                                            />}\r\n                                            \r\n\r\n                    <Flex overflowX=\"scroll\" direction=\"row\" marginLeft=\"200\">\r\n                    {chosenProfile.portfolio.length !== 0 && \r\n                     chosenProfile.portfolio.slice(0).reverse().map(image => \r\n                     \r\n                        <Image cursor=\"pointer\" onClick={() => handleOpen(image)}  m='1.5' marginBottom='2' boxSize=\"250px\" src={image} alt=\"naruto\" objectFit=\"cover\" />\r\n                    \r\n                     )\r\n                    }\r\n                       </Flex>\r\n\r\n                       <Modal isOpen={isOpen} onClose={onClose}>\r\n                            <ModalOverlay />\r\n                            <ModalContent>\r\n                           \r\n                            <ModalCloseButton />\r\n                            <ModalBody>\r\n                            <Image   boxSize=\"500px\" src={modalImage} alt=\"naruto\" objectFit=\"cover\" />\r\n                            </ModalBody>\r\n                            </ModalContent>\r\n                        </Modal>\r\n\r\n                { editMode ? \r\n                \r\n                <Flex mx='200' direction=\"column\">\r\n                        {/** Here gooes editing form */}\r\n                        <form onSubmit={onSubmit}>\r\n                        <Flex direction=\"column\">\r\n                             <Heading>Full Name</Heading>\r\n                             <Input type=\"text\" name=\"fullName\" placeholder=\"Full Name\" value={editedProfile.fullName} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                        <Flex direction=\"column\">\r\n                             <Heading>Bio</Heading>\r\n                             <Textarea type=\"text\" name=\"description\" placeholder=\"Bio\" value={editedProfile.description} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                    \r\n                    <Flex direction=\"row\">\r\n                               <Box>\r\n                                <Heading>Languages</Heading>\r\n                                <Select name=\"languages\" placeholder=\"Select option\" multiple height='100px' width=\"300px\" value={editedProfile.languages} onChange={onChangeSelectLanguage}>\r\n                                    <option value=\"German\">German</option>\r\n                                    <option value=\"English\">English</option>\r\n                                    <option value=\"French\">French</option>\r\n                                    <option value=\"Dutch\">Dutch</option>\r\n                                    <option value=\"Italian\">Italian</option>\r\n                                </Select>  \r\n                                </Box>\r\n\r\n                                <Spacer />\r\n\r\n                                <Box>\r\n                                <Heading>Hobbies</Heading>\r\n                                <Select name=\"hobbies\" placeholder=\"Select option\" multiple height='100px' width=\"300px\" value={editedProfile.hobbies} onChange={onChangeSelectHobby}>\r\n                                    <option value=\"Football\">Football</option>\r\n                                    <option value=\"Skydiving\">Skydiving</option>\r\n                                    <option value=\"Swimming\">Swimming</option>\r\n                                    <option value=\"Tennis\">Tennis</option>\r\n                                    <option value=\"Art\">Art</option>\r\n                                </Select>  \r\n                                </Box>\r\n\r\n                    </Flex>\r\n\r\n                        <Flex direction=\"column\">\r\n                             <Heading>City</Heading>\r\n                             <Input type=\"text\" name=\"city\" placeholder=\"City\" value={editedProfile.city} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                        \r\n                        <Flex direction=\"column\">\r\n                             <Heading>Address</Heading>\r\n                             <Textarea type=\"text\" name=\"address\" placeholder=\"Address\" value={editedProfile.address} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                        <Box>\r\n                        <Heading>Birthday</Heading>\r\n                        <Flex direction=\"row\">\r\n                        <Input type=\"number\" name=\"day\" placeholder=\"Day\" value={editedBirthday.day} onChange={onChangeEditedBirthday} />\r\n                        <Input type=\"number\" name=\"month\" placeholder=\"Month\" value={editedBirthday.month} onChange={onChangeEditedBirthday} />\r\n                        <Input type=\"number\" name=\"year\" placeholder=\"Year\" value={editedBirthday.year} onChange={onChangeEditedBirthday} />\r\n                        </Flex>\r\n                        </Box>\r\n                        <br />\r\n                        <Button type=\"submit\" marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdSave} />\r\n                                <Text>Save Changes</Text>\r\n                        </Button>\r\n                        <Button onClick={() => setEditMode(false)} marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdKeyboardReturn} />\r\n                                <Text>Return</Text>\r\n                        </Button>\r\n                        </form>\r\n                </Flex> \r\n                \r\n                    :   \r\n                \r\n                            <Box marginLeft=\"200\">\r\n                                <Heading>{chosenProfile.fullName}</Heading>\r\n                                <Text  fontSize=\"xl\">\r\n                                {chosenProfile.description}\r\n                                </Text>\r\n                            </Box> \r\n                     }\r\n                     \r\n                      \r\n\r\n                </Flex>\r\n\r\n\r\n\r\n            </Flex> : \r\n\r\n            <Box>\r\n                <Spinner size=\"xl\" />\r\n            </Box>\r\n            \r\n        }\r\n            \r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppState.js",["119"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppContext.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppReducer.js",["120","121"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\AddProfile.js",["122","123"],"import { Box, Button, Spacer,Text, Flex, Heading, Icon, Input, Select, Textarea } from '@chakra-ui/react'\r\nimport React,{useEffect,useContext,useState} from 'react'\r\nimport { MdSave } from 'react-icons/md'\r\nimport AuthContext from '../context/auth/AuthContext'\r\n\r\nimport AppContext from '../context/app/AppContext'\r\n\r\nconst AddProfile = props => {\r\n    \r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {user,addProfile,profile} = authContext\r\n\r\n    const appContext = useContext(AppContext)\r\n    const {getChosenProfile} = appContext\r\n\r\n    const [editedProfile,setEditedProfile] = useState({hobbies:[],\r\n    languages:[]})\r\n    const [editedBirthday, setEditedBirthday] = useState({\r\n        day:'',month:'',year:''\r\n    })\r\n\r\n    const onChangeEdited = e => {\r\n        setEditedProfile({...editedProfile,\r\n                    [e.target.name]:e.target.value\r\n            })\r\n    }\r\n\r\n    const onChangeSelectLanguage = e => {\r\n        if(!editedProfile.languages.includes(e.target.value)){\r\n            setEditedProfile({...editedProfile,\r\n                    [e.target.name]:[...editedProfile.languages,e.target.value]\r\n            })\r\n        }else{\r\n            setEditedProfile({...editedProfile,\r\n                [e.target.name]:editedProfile.languages.filter(lang => lang !== e.target.value)\r\n        })\r\n        }\r\n        \r\n    }\r\n\r\n    const onChangeSelectHobby = e => {\r\n        if(!editedProfile.hobbies.includes(e.target.value)){\r\n            setEditedProfile({...editedProfile,\r\n                    [e.target.name]:[...editedProfile.hobbies,e.target.value]\r\n            })\r\n        }else{\r\n            setEditedProfile({...editedProfile,\r\n                [e.target.name]:editedProfile.hobbies.filter(hob => hob !== e.target.value)\r\n        })\r\n        }\r\n        \r\n    }\r\n\r\n    const onChangeEditedBirthday = e => {\r\n        setEditedBirthday({...editedBirthday,\r\n                [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        let birthDate = editedBirthday.day+\"-\"+editedBirthday.month+\"-\"+editedBirthday.year\r\n        editedProfile.birthDate = birthDate\r\n        addProfile(editedProfile)\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(profile !== null){\r\n            getChosenProfile(profile.user)\r\n            props.history.push(`/profile/${profile._id}`)\r\n        }\r\n    }, [props.history,profile]);\r\n\r\n\r\n    return (\r\n        <Flex mx='200' direction=\"column\">\r\n                        {/** Here gooes editing form */}\r\n                        <form onSubmit={onSubmit}>\r\n                        <Flex direction=\"column\">\r\n                             <Heading>Full Name</Heading>\r\n                             <Input type=\"text\" name=\"fullName\" placeholder=\"Full Name\" value={editedProfile.fullName} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                        <Flex direction=\"column\">\r\n                             <Heading>Bio</Heading>\r\n                             <Textarea type=\"text\" name=\"description\" placeholder=\"Bio\" value={editedProfile.description} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                    \r\n                    <Flex direction=\"row\">\r\n                               <Box>\r\n                                <Heading>Languages</Heading>\r\n                                <Select name=\"languages\" placeholder=\"Select option\" multiple height='100px' width=\"300px\" value={editedProfile.languages} onChange={onChangeSelectLanguage}>\r\n                                    <option value=\"German\">German</option>\r\n                                    <option value=\"English\">English</option>\r\n                                    <option value=\"French\">French</option>\r\n                                    <option value=\"Dutch\">Dutch</option>\r\n                                    <option value=\"Italian\">Italian</option>\r\n                                </Select>  \r\n                                </Box>\r\n\r\n                                <Spacer />\r\n\r\n                                <Box>\r\n                                <Heading>Hobbies</Heading>\r\n                                <Select name=\"hobbies\" placeholder=\"Select option\" multiple height='100px' width=\"300px\" value={editedProfile.hobbies} onChange={onChangeSelectHobby}>\r\n                                    <option value=\"Football\">Football</option>\r\n                                    <option value=\"Skydiving\">Skydiving</option>\r\n                                    <option value=\"Swimming\">Swimming</option>\r\n                                    <option value=\"Tennis\">Tennis</option>\r\n                                    <option value=\"Art\">Art</option>\r\n                                </Select>  \r\n                                </Box>\r\n\r\n                    </Flex>\r\n                        \r\n                        <Flex direction=\"column\">\r\n                             <Heading>Address</Heading>\r\n                             <Textarea type=\"text\" name=\"address\" placeholder=\"Address\" value={editedProfile.address} onChange={onChangeEdited} />\r\n                        </Flex>\r\n\r\n                        <Flex direction=\"column\">\r\n                             <Heading>City</Heading>\r\n                             <Input type=\"text\" name=\"city\" placeholder=\"City\" value={editedProfile.city} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                        <Box>\r\n                        <Heading>Birthday</Heading>\r\n                        <Flex direction=\"row\">\r\n                        <Input type=\"number\" name=\"day\" placeholder=\"Day\" value={editedBirthday.day} onChange={onChangeEditedBirthday} />\r\n                        <Input type=\"number\" name=\"month\" placeholder=\"Month\" value={editedBirthday.month} onChange={onChangeEditedBirthday} />\r\n                        <Input type=\"number\" name=\"year\" placeholder=\"Year\" value={editedBirthday.year} onChange={onChangeEditedBirthday} />\r\n                        </Flex>\r\n                        </Box>\r\n                        <br />\r\n                        <Button type=\"submit\" marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdSave} />\r\n                                <Text>Save Changes</Text>\r\n                        </Button>\r\n                        </form>\r\n                </Flex> \r\n    )\r\n}\r\n\r\nexport default AddProfile\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Recommandations.js",["124","125","126","127"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Recommandation.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":16,"column":40,"nodeType":"134","messageId":"135","endLine":16,"endColumn":44},{"ruleId":"136","severity":1,"message":"137","line":39,"column":36,"nodeType":"138","messageId":"139","endLine":39,"endColumn":38},{"ruleId":"140","severity":1,"message":"141","line":45,"column":8,"nodeType":"142","endLine":45,"endColumn":31,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"137","line":45,"column":33,"nodeType":"138","messageId":"139","endLine":45,"endColumn":35},{"ruleId":"132","severity":1,"message":"144","line":81,"column":14,"nodeType":"134","messageId":"135","endLine":81,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":11,"column":1,"nodeType":"147","endLine":65,"endColumn":2},{"ruleId":"140","severity":1,"message":"148","line":38,"column":8,"nodeType":"142","endLine":38,"endColumn":10,"suggestions":"149"},{"ruleId":"136","severity":1,"message":"137","line":128,"column":74,"nodeType":"138","messageId":"139","endLine":128,"endColumn":76},{"ruleId":"132","severity":1,"message":"150","line":3,"column":43,"nodeType":"134","messageId":"135","endLine":3,"endColumn":54},{"ruleId":"132","severity":1,"message":"151","line":3,"column":56,"nodeType":"134","messageId":"135","endLine":3,"endColumn":66},{"ruleId":"132","severity":1,"message":"152","line":3,"column":73,"nodeType":"134","messageId":"135","endLine":3,"endColumn":78},{"ruleId":"132","severity":1,"message":"153","line":3,"column":92,"nodeType":"134","messageId":"135","endLine":3,"endColumn":103},{"ruleId":"140","severity":1,"message":"154","line":31,"column":8,"nodeType":"142","endLine":31,"endColumn":10,"suggestions":"155"},{"ruleId":"140","severity":1,"message":"156","line":46,"column":8,"nodeType":"142","endLine":46,"endColumn":23,"suggestions":"157"},{"ruleId":"136","severity":1,"message":"137","line":209,"column":61,"nodeType":"138","messageId":"139","endLine":209,"endColumn":63},{"ruleId":"136","severity":1,"message":"137","line":266,"column":112,"nodeType":"138","messageId":"139","endLine":266,"endColumn":114},{"ruleId":"136","severity":1,"message":"137","line":294,"column":105,"nodeType":"138","messageId":"139","endLine":294,"endColumn":107},{"ruleId":"136","severity":1,"message":"137","line":367,"column":61,"nodeType":"138","messageId":"139","endLine":367,"endColumn":63},{"ruleId":"132","severity":1,"message":"158","line":1,"column":30,"nodeType":"134","messageId":"135","endLine":1,"endColumn":40},{"ruleId":"145","severity":1,"message":"146","line":9,"column":1,"nodeType":"147","endLine":57,"endColumn":2},{"ruleId":"159","severity":1,"message":"160","line":10,"column":5,"nodeType":"161","messageId":"162","endLine":53,"endColumn":6},{"ruleId":"132","severity":1,"message":"133","line":12,"column":12,"nodeType":"134","messageId":"135","endLine":12,"endColumn":16},{"ruleId":"140","severity":1,"message":"163","line":75,"column":8,"nodeType":"142","endLine":75,"endColumn":31,"suggestions":"164"},{"ruleId":"132","severity":1,"message":"165","line":3,"column":118,"nodeType":"134","messageId":"135","endLine":3,"endColumn":122},{"ruleId":"136","severity":1,"message":"166","line":18,"column":26,"nodeType":"138","messageId":"139","endLine":18,"endColumn":28},{"ruleId":"140","severity":1,"message":"167","line":21,"column":8,"nodeType":"142","endLine":21,"endColumn":23,"suggestions":"168"},{"ruleId":"140","severity":1,"message":"169","line":77,"column":8,"nodeType":"142","endLine":77,"endColumn":10,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'res' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array.",["174"],"'AvatarBadge' is defined but never used.","'IconButton' is defined but never used.","'Image' is defined but never used.","'ModalFooter' is defined but never used.","React Hook useEffect has missing dependencies: 'getChosenProfile' and 'params.id'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'editedBirthday' and 'editedProfile'. Either include them or remove the dependency array. You can also do a functional update 'setEditedProfile(e => ...)' if you only need 'editedProfile' in the 'setEditedProfile' call.",["176"],"'useContext' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'getChosenProfile'. Either include it or remove the dependency array.",["177"],"'Text' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'rec'. Either include it or remove the dependency array. You can also do a functional update 'setRec(r => ...)' if you only need 'rec' in the 'setRec' call.",["178"],"React Hook useEffect has a missing dependency: 'getAllRecommandations'. Either include it or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [error, isAuthenticated, props.history]",{"range":"194","text":"195"},"Update the dependencies array to be: [getProfiles]",{"range":"196","text":"197"},"Update the dependencies array to be: [getChosenProfile, params.id]",{"range":"198","text":"199"},"Update the dependencies array to be: [chosenProfile, editedBirthday, editedProfile]",{"range":"200","text":"201"},"Update the dependencies array to be: [props.history, profile, getChosenProfile]",{"range":"202","text":"203"},"Update the dependencies array to be: [previewSource, rec]",{"range":"204","text":"205"},"Update the dependencies array to be: [getAllRecommandations]",{"range":"206","text":"207"},[1010,1033],"[error, isAuthenticated, props.history]",[1179,1181],"[getProfiles]",[1347,1349],"[getChosenProfile, params.id]",[1821,1836],"[chosenProfile, editedBirthday, editedProfile]",[2387,2410],"[props.history, profile, getChosenProfile]",[778,793],"[previewSource, rec]",[2371,2373],"[getAllRecommandations]"]