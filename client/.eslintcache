[{"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\index.js":"1","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\App.js":"2","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Login.js":"3","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Signup.js":"4","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthContext.js":"5","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthState.js":"6","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\axios\\AuthApi.js":"7","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\utils\\setAuthToken.js":"8","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\types.js":"9","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthReducer.js":"10","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\axios\\GeneralApi.js":"11","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Community.js":"12","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Header.js":"13","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\utils\\theme.js":"14","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\ColorModeSwitch.js":"15","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Profile.js":"16","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppState.js":"17","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppContext.js":"18","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppReducer.js":"19","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\AddProfile.js":"20","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Recommandations.js":"21","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Recommandation.js":"22","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Questions.js":"23","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Question.js":"24","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Meetings.js":"25"},{"size":327,"mtime":1611460208516,"results":"26","hashOfConfig":"27"},{"size":1538,"mtime":1612796888925,"results":"28","hashOfConfig":"27"},{"size":2533,"mtime":1612646805067,"results":"29","hashOfConfig":"27"},{"size":2941,"mtime":1612185083123,"results":"30","hashOfConfig":"27"},{"size":105,"mtime":1611282743008,"results":"31","hashOfConfig":"27"},{"size":2981,"mtime":1612266162589,"results":"32","hashOfConfig":"27"},{"size":131,"mtime":1611630977037,"results":"33","hashOfConfig":"27"},{"size":275,"mtime":1611283873900,"results":"34","hashOfConfig":"27"},{"size":1251,"mtime":1612861694800,"results":"35","hashOfConfig":"27"},{"size":2061,"mtime":1612265724480,"results":"36","hashOfConfig":"27"},{"size":101,"mtime":1611741012225,"results":"37","hashOfConfig":"27"},{"size":8229,"mtime":1612863759143,"results":"38","hashOfConfig":"27"},{"size":5809,"mtime":1612796912410,"results":"39","hashOfConfig":"27"},{"size":359,"mtime":1611462598743,"results":"40","hashOfConfig":"27"},{"size":452,"mtime":1611460162337,"results":"41","hashOfConfig":"27"},{"size":24271,"mtime":1612862869735,"results":"42","hashOfConfig":"27"},{"size":7990,"mtime":1612863890402,"results":"43","hashOfConfig":"27"},{"size":103,"mtime":1611817859849,"results":"44","hashOfConfig":"27"},{"size":6086,"mtime":1612863643691,"results":"45","hashOfConfig":"27"},{"size":6971,"mtime":1612862890104,"results":"46","hashOfConfig":"27"},{"size":8537,"mtime":1612625088427,"results":"47","hashOfConfig":"27"},{"size":3890,"mtime":1612628729688,"results":"48","hashOfConfig":"27"},{"size":8436,"mtime":1612650187088,"results":"49","hashOfConfig":"27"},{"size":3888,"mtime":1612649553857,"results":"50","hashOfConfig":"27"},{"size":9468,"mtime":1612807031206,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1cvufhj",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\index.js",[],["111","112"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\App.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Login.js",["113","114","115"],"import {useState,useContext,useEffect} from 'react'\r\nimport AuthContext from '../context/auth/AuthContext'\r\n\r\nimport {Flex,\r\n    Box,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    useToast } from \"@chakra-ui/react\"\r\n\r\nconst Login = props => {\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {login,isAuthenticated,error,user} = authContext\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    const errorToast = useToast()\r\n\r\n    const onChangeUsername = e => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = e => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n                if(error !== null){\r\n                    setUsername('')\r\n                    setPassword('')\r\n                }\r\n\r\n                if(isAuthenticated == \"true\"){\r\n                      props.history.push('/community')\r\n                }\r\n               \r\n\r\n        \r\n    }, [error,isAuthenticated]);\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if(username !== '' && password !== ''){\r\n            const data = {\r\n                username,\r\n                password\r\n            }\r\n            login(data)\r\n        }else{\r\n          errorToast({\r\n            title: 'Empty Fields',\r\n            description: \"Fill all the fields.\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n        })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n        <Box bg=\"brand.100\" p={8} maxWidth=\"500px\" borderWidth={1} borderRadius={8} boxShadow=\"lg\" marginTop={50}>\r\n          <Box textAlign=\"center\">\r\n            <Heading>Login</Heading>\r\n          </Box>\r\n          <Box my={4} textAlign=\"left\">\r\n            <form onSubmit={onSubmit}>\r\n              <FormControl>\r\n                <FormLabel>Username</FormLabel>\r\n                <Input type=\"text\" value={username} placeholder=\"test\" onChange={onChangeUsername} />\r\n              </FormControl>\r\n              <FormControl mt={6}>\r\n                <FormLabel>Password</FormLabel>\r\n                <Input type=\"password\" value={password} placeholder=\"*******\" onChange={onChangePassword} />\r\n              </FormControl>\r\n              <Button width=\"full\" mt={4} type=\"submit\">\r\n                Sign In\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Signup.js",["116"],"import {useState,useContext,useEffect} from 'react'\r\nimport AuthContext from '../context/auth/AuthContext'\r\n\r\nimport {Flex,\r\n    Box,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    useToast } from \"@chakra-ui/react\"\r\n\r\nconst Signup = props => {\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {signup,isRegistered,error} = authContext\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    const errorToast = useToast()\r\n\r\n\r\n    const onChangeUsername = e => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const onChangeEmail = e => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = e => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n                if(error !== null){\r\n                    setUsername('')\r\n                    setPassword('')\r\n                }\r\n\r\n                if(isRegistered == true){\r\n                      props.history.push('/login')\r\n                }\r\n               \r\n\r\n        \r\n    }, [error,isRegistered,props.history]);\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if(username !== '' && password !== '' && email !== ''){\r\n            const data = {\r\n                username,\r\n                email,\r\n                password,\r\n                roles: [\"user\"]\r\n            }\r\n            signup(data)\r\n        }else{\r\n          errorToast({\r\n            title: 'Empty Fields',\r\n            description: \"Fill all the fields.\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n        })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n        <Box bg=\"brand.100\" p={8} maxWidth=\"500px\" borderWidth={1} borderRadius={8} boxShadow=\"lg\" marginTop={50}>\r\n          <Box textAlign=\"center\">\r\n            <Heading>Sign Up</Heading>\r\n          </Box>\r\n          <Box my={4} textAlign=\"left\">\r\n            <form onSubmit={onSubmit}>\r\n              <FormControl>\r\n                <FormLabel>Username</FormLabel>\r\n                <Input type=\"text\" value={username} placeholder=\"test\" onChange={onChangeUsername} />\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel>Email</FormLabel>\r\n                <Input type=\"text\" value={email} placeholder=\"test@mail.com\" onChange={onChangeEmail} />\r\n              </FormControl>\r\n              <FormControl mt={6}>\r\n                <FormLabel>Password</FormLabel>\r\n                <Input type=\"password\" value={password} placeholder=\"*******\" onChange={onChangePassword} />\r\n              </FormControl>\r\n              <Button width=\"full\" mt={4} type=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthContext.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthState.js",["117"],"import React, { useReducer } from 'react';\r\nimport AuthContext from './AuthContext'\r\nimport AuthReducer from './AuthReducer'\r\nimport authApi from '../../axios/AuthApi'\r\nimport generalApi from '../../axios/GeneralApi'\r\nimport setAuthToken from '../../utils/setAuthToken'\r\n\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_SUCCESS,\r\n    PERSIST_PROFILE,\r\n    REGISTER_FAIL,\r\n    LOGOUT\r\n} from '../types'\r\n\r\nconst AuthState = props => {\r\n\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        isAuthenticated: localStorage.getItem('isAuth'),\r\n        isRegistered: false,\r\n        user: JSON.parse(localStorage.getItem('user')) ,\r\n        profile: JSON.parse(localStorage.getItem('profile')),\r\n        error: null\r\n    }\r\n\r\n   const [state, dispatch] = useReducer(AuthReducer, initialState)\r\n\r\n   // Action :\r\n\r\n\r\n   const addProfile = async data => {\r\n    \r\n    setAuthToken(localStorage.token)\r\n    //console.log('Hey update here')\r\n    try{\r\n     \r\n    const res = await generalApi.post('/api/profiles',data)\r\n\r\n    dispatch({\r\n        type: PERSIST_PROFILE,\r\n        payload: res.data\r\n    })\r\n    \r\n\r\n    } catch(err){\r\n        console.log(err.message)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n   // Login User\r\n   const login = async formData => {\r\n\r\n    try {\r\n        const res = await authApi.post('/api/auth/signin', formData)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        setAuthToken(res.data.accessToken)\r\n        loadProfile(res.data.id)\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: 'Invalid Credentials!'\r\n        })\r\n    }\r\n}\r\n\r\n // Resister User\r\n const signup = async formData => {\r\n\r\n    try {\r\n       const res = await authApi.post('/api/auth/signup', formData)\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: REGISTER_FAIL,\r\n            payload: err.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Load User Profile\r\nconst loadProfile = async userId => {\r\n\r\n    try {\r\n       const res = await generalApi.get(`/api/profiles/user/${userId}`)\r\n       console.log('profile data : ',res.data)\r\n\r\n        dispatch({\r\n            type: PERSIST_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n   // Logout\r\n   const logout = () => {\r\n    dispatch({type: LOGOUT})\r\n    }\r\n\r\n\r\n   return (\r\n       <AuthContext.Provider \r\n       value={{\r\n           token: state.token,\r\n           isAuthenticated: state.isAuthenticated,\r\n           isRegistered: state.isRegistered,\r\n           user: state.user,\r\n           profile : state.profile,\r\n           error: state.error,\r\n           login,\r\n           signup,\r\n           loadProfile,\r\n           addProfile,\r\n           logout\r\n       }}>\r\n\r\n           {props.children}\r\n       </AuthContext.Provider>\r\n   )\r\n\r\n}\r\nexport default AuthState","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\axios\\AuthApi.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\types.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthReducer.js",["118"],"import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_SUCCESS,\r\n    PERSIST_PROFILE,\r\n    REGISTER_FAIL,\r\n    LOGOUT\r\n} from '../types'\r\n\r\n\r\nexport default (state,action) => {\r\n    switch(action.type){\r\n\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token',action.payload.accessToken)\r\n            localStorage.setItem('isAuth',\"true\")\r\n            localStorage.setItem('user',JSON.stringify(action.payload) )\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                token: action.payload.accessToken,\r\n                isAuthenticated: \"true\",\r\n                error: null\r\n            }\r\n            case LOGIN_FAIL:\r\n            case REGISTER_FAIL:\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('isAuth')\r\n            localStorage.removeItem('user')\r\n            return {\r\n                ...state,\r\n                token:null,\r\n                isAuthenticated: 'false',\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n                case REGISTER_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    isRegistered: true\r\n                }\r\n                case LOGOUT:\r\n                    localStorage.removeItem('token')\r\n                    localStorage.removeItem('user')\r\n                    localStorage.setItem('isAuth','false')\r\n                    localStorage.removeItem('profile')\r\n                    return {\r\n                        ...state,\r\n                        token:null,\r\n                        isAuthenticated: \"false\",\r\n                        user: null,\r\n                        profile: null,\r\n                        error: action.payload\r\n                    }\r\n            case PERSIST_PROFILE:\r\n                localStorage.setItem('profile',JSON.stringify(action.payload) )\r\n            return {\r\n                ...state,\r\n               profile: action.payload\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\axios\\GeneralApi.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Community.js",["119","120","121","122","123","124","125","126","127","128","129","130","131"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Header.js",["132","133","134"],"import React,{useContext} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Flex, Text, Button, Avatar, AvatarBadge, IconButton, Icon,Image } from \"@chakra-ui/react\";\r\nimport ColorModeSwitch from './ColorModeSwitch'\r\nimport AuthContext from '../context/auth/AuthContext'\r\nimport { MdPowerSettingsNew } from \"react-icons/md\";\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst MenuItem = ({ children, isLast, to = \"/\", ...rest }) => {\r\n\r\n  return (\r\n    <Text\r\n      mb={{ base: isLast ? 0 : 8, sm: 0 }}\r\n      mr={{ base: 0, sm: isLast ? 0 : 8 }}\r\n      display=\"block\"\r\n      {...rest}\r\n    >\r\n      <Link to={to}>{children}</Link>\r\n    </Text>\r\n  );\r\n};\r\n\r\nconst CloseIcon = () => (\r\n  <svg width=\"24\" viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <title>Close</title>\r\n    <path\r\n      fill=\"white\"\r\n      d=\"M9.00023 7.58599L13.9502 2.63599L15.3642 4.04999L10.4142 8.99999L15.3642 13.95L13.9502 15.364L9.00023 10.414L4.05023 15.364L2.63623 13.95L7.58623 8.99999L2.63623 4.04999L4.05023 2.63599L9.00023 7.58599Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst MenuIcon = () => (\r\n  <svg\r\n    width=\"24px\"\r\n    viewBox=\"0 0 20 20\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"white\"\r\n  >\r\n    <title>Menu</title>\r\n    <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\r\n  </svg>\r\n);\r\n\r\nconst Header = (props) => {\r\n  const [show, setShow] = React.useState(false);\r\n  const toggleMenu = () => setShow(!show);\r\n\r\n  const history = useHistory()\r\n\r\n  const authContext = useContext(AuthContext)\r\n  const {profile,isAuthenticated, logout,user} = authContext \r\n\r\n  const onLogout = () => {\r\n    logout()\r\n     history.push('/login')\r\n  }\r\n  const goToProfile = (id) => {\r\n    history.push(`/profile/${id}`)\r\n  }\r\n  const goToAddProfile = () => {\r\n    history.push(`/profile/add`)\r\n  }\r\n  \r\n\r\n  const authLinks = (\r\n    <>\r\n    { profile !== null && <>\r\n    <Flex cursor=\"pointer\" onClick={() => goToProfile(profile.user)} marginRight='7px'>\r\n  <Avatar src={profile.profilePicture} />\r\n  <Box ml=\"3\">\r\n    <Text color=\"white\" fontWeight=\"bold\">\r\n      {profile.fullName}\r\n    </Text>\r\n    <Text fontSize=\"sm\" color=\"white\">{profile.city}</Text>\r\n  </Box>\r\n</Flex>\r\n<Button marginRight='6px' onClick={onLogout}>\r\n  <Icon color=\"#C62828\" w={8} h={8} as={MdPowerSettingsNew} />\r\n</Button>\r\n</>\r\n}\r\n    </>\r\n  )\r\n  const guestLinks = (\r\n    \r\n    <>\r\n    {user !== null ? <> <Button\r\n              size=\"sm\"\r\n              rounded=\"md\"\r\n              color={[\"primary.500\", \"primary.500\", \"white\", \"white\"]}\r\n              bg={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}\r\n              _hover={{\r\n                bg: [\"primary.100\", \"primary.100\", \"primary.600\", \"primary.600\"]\r\n              }}\r\n              marginRight='18px'\r\n              onClick={() => goToAddProfile(user.id)}\r\n            >\r\n              Add Profile\r\n            </Button> \r\n            <Button marginRight='6px' onClick={onLogout}>\r\n              <Icon color=\"#C62828\" w={8} h={8} as={MdPowerSettingsNew} />\r\n            </Button>\r\n            </> :\r\n          \r\n          <>\r\n    <MenuItem to=\"/login\" isLast={false}>\r\n            <Button\r\n              size=\"sm\"\r\n              rounded=\"md\"\r\n              color={[\"primary.500\", \"primary.500\", \"white\", \"white\"]}\r\n              bg={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}\r\n              _hover={{\r\n                bg: [\"primary.100\", \"primary.100\", \"primary.600\", \"primary.600\"]\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n          </MenuItem>\r\n          <MenuItem to=\"/signup\" isLast={false}>\r\n            <Button\r\n              size=\"sm\"\r\n              rounded=\"md\"\r\n              color={[\"primary.500\", \"primary.500\", \"white\", \"white\"]}\r\n              bg={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}\r\n              _hover={{\r\n                bg: [\"primary.100\", \"primary.100\", \"primary.600\", \"primary.600\"]\r\n              }}\r\n            >\r\n              Create Account\r\n            </Button>\r\n          </MenuItem>\r\n          </>\r\n          \r\n          \r\n          }\r\n    \r\n    </>\r\n  )\r\n\r\n\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      w=\"100%\"\r\n      mb={8}\r\n      p={8}\r\n      bg={[\"primary.800\", \"primary.800\", \"primary.800\", \"primary.800\"]}\r\n      color={[\"white\", \"white\", \"primary.700\", \"primary.700\"]}\r\n      {...props}\r\n    >\r\n\r\n    <Flex align=\"center\">\r\n    <Box w=\"200px\"\r\n          color={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}>\r\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\r\n        World Traveler\r\n      </Text>\r\n     \r\n\r\n    </Box>\r\n   {/* <Image boxSize=\"50px\" src=\"https://res.cloudinary.com/oelmounkad/image/upload/v1612190965/headerpic_tmzbtw.png\" alt=\"naruto\" objectFit=\"cover\" />*/}\r\n      </Flex>\r\n\r\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={toggleMenu}>\r\n        {show ? <CloseIcon /> : <MenuIcon />}\r\n      </Box>\r\n\r\n      \r\n    \r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\r\n        flexBasis={{ base: \"100%\", md: \"auto\" }}\r\n      >\r\n\r\n        <Flex\r\n          align=\"center\"\r\n          justify={[\"center\", \"space-between\", \"flex-end\", \"flex-end\"]}\r\n          direction={[\"column\", \"row\", \"row\", \"row\"]}\r\n          pt={[4, 4, 0, 0]}\r\n        >\r\n          <MenuItem to=\"/\">Home</MenuItem>\r\n          <MenuItem to=\"/community\">Community </MenuItem>\r\n          <MenuItem to=\"/meetings\">Meetings </MenuItem>\r\n          <MenuItem to=\"/recommandations\">Recommandations </MenuItem>\r\n          <MenuItem to=\"/questions\">Q&A </MenuItem>\r\n          { isAuthenticated === \"true\" && profile !== null ? authLinks : guestLinks}\r\n          <ColorModeSwitch />\r\n        </Flex>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\utils\\theme.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\ColorModeSwitch.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Profile.js",["135","136","137","138","139","140","141"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppState.js",["142","143","144","145"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppContext.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppReducer.js",["146","147","148"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\AddProfile.js",["149","150"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Recommandations.js",["151","152","153","154"],"import React,{useContext,useRef,useEffect,useState} from 'react'\r\nimport AppContext from '../context/app/AppContext'\r\nimport {useDisclosure,Image,Select,Center,Box,Flex,Heading,Input,InputGroup,InputLeftElement,Icon, Button, Collapse, Text} from '@chakra-ui/react'\r\nimport {AddIcon} from '@chakra-ui/icons'\r\nimport { MdMyLocation } from 'react-icons/md'\r\nimport Recommandation from './Recommandation'\r\n\r\nconst Recommandations = () => {\r\n\r\n    let hiddenInput = null\r\n    const [fileInputState, setFileInputState] = useState('')\r\n\r\n    const [previewSource, setPreviewSource] = useState('')\r\n\r\n    const [selectedFile, setSelectedFile] = useState()\r\n\r\n    useEffect(() => {\r\n        if(previewSource != ''){\r\n            setRec({...rec,picture:previewSource})\r\n        }\r\n    }, [previewSource]);\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file instanceof Blob){\r\n            previewFile(file);\r\n        setSelectedFile(file);\r\n        setFileInputState(e.target.value);\r\n        }else{\r\n            setPreviewSource('');\r\n            setFileInputState('');\r\n        }\r\n        \r\n    }\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        };\r\n    }\r\n    const [rec, setRec] = useState('')\r\n\r\n    const onChangeRec = e => {\r\n        setRec({...rec,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if (!selectedFile) return;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(selectedFile);\r\n        reader.onloadend = () => {\r\n            addRecommandation(rec).then(() => getAllRecommandations())\r\n            setFileInputState('')\r\n            setPreviewSource('')\r\n            setRec({})\r\n            onToggle()\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    const appContext = useContext(AppContext)\r\n    const {getAllRecommandations,addRecommandation,\r\n        recommandations,filteredRecommandations,clearFilterRec,\r\n            filterRecByTheme,\r\n            filterRecByLocation} = appContext\r\n\r\n    const textLoc = useRef('')\r\n    const textTheme = useRef('')\r\n\r\n    const { isOpen, onToggle } = useDisclosure()\r\n\r\n    useEffect(() => {\r\n        getAllRecommandations()\r\n    }, [])\r\n\r\n\r\n    const onChangeLoc = e => {\r\n        if(textLoc.current.value !== ''){\r\n            filterRecByLocation(e.target.value)\r\n        }\r\n        else{\r\n            clearFilterRec()\r\n        }\r\n    }\r\n\r\n    const onChangeTheme = e => {\r\n        if(textTheme.current.value !== ''){\r\n            filterRecByTheme(e.target.value)\r\n        }\r\n        else{\r\n            clearFilterRec()\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n        {/*/Filters */}\r\n\r\n        <Box textAlign=\"center\">\r\n            <Heading>Search For Recommandation</Heading>\r\n          </Box>\r\n          <br />\r\n         <Center>\r\n          <Flex gridColumnGap={4} gridRowGap={4}\r\n          justify={[\"center\", \"space-between\", \"flex-end\", \"flex-end\"]}\r\n          direction={[\"column\", \"row\", \"row\", \"row\"]}\r\n          pt={[4, 4, 0, 0]} spacing={3}>\r\n                <InputGroup>\r\n                    <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<Icon color=\"gray.300\" as={MdMyLocation} />}\r\n                    />\r\n                    <Input type=\"text\" placeholder=\"Location/City\" ref={textLoc} onChange={onChangeLoc} />\r\n                </InputGroup>\r\n\r\n                <InputGroup>\r\n                    <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<Icon color=\"gray.300\" />}\r\n                    />\r\n                    <Input type=\"text\" placeholder=\"Theme\" ref={textTheme} onChange={onChangeTheme} />\r\n                </InputGroup>\r\n\r\n            </Flex>\r\n            </Center>\r\n        <br />\r\n       <Center><Button onClick={onToggle}>Add Recommandation</Button></Center> \r\n        <br />\r\n\r\n        {/* Add Recommandation */}\r\n        <form onSubmit={onSubmit}>\r\n            <Center>\r\n                <Collapse in={isOpen} animateOpacity>\r\n                    <Box\r\n                    p=\"40px\"\r\n                    color=\"white\"\r\n                    mt=\"4\"\r\n                    bg=\"#263238\"\r\n                    rounded=\"md\"\r\n                    shadow=\"md\"\r\n                    >\r\n                         <Input type=\"text\" placeholder=\"Description\" name=\"description\" value={rec.description} onChange={onChangeRec} />\r\n                 <br />  <Input type=\"text\" placeholder=\"City\" name=\"city\" value={rec.city} onChange={onChangeRec} />\r\n                 <br />  <Input type=\"text\" placeholder=\"Address\" name=\"location\" value={rec.location} onChange={onChangeRec} />\r\n                 <br />  <Select placeholder=\"Select a theme\" name=\"theme\" value={rec.theme} onChange={onChangeRec}>\r\n                            <option value=\"Food\">Food</option>\r\n                            <option value=\"Hotel\">Hotel</option>\r\n                            <option value=\"Monuments\">Monuments</option>\r\n                            <option value=\"Restaurants\">Restaurants</option>\r\n                            <option value=\"Museums\">Museums</option>\r\n                            <option value=\"Parks\">Parks</option>\r\n                            <option value=\"Beaches\">Beaches</option>\r\n                            <option value=\"Nature\">Nature</option>\r\n                            <option value=\"Amusement Parks\">Amusement Parks</option>\r\n                            <option value=\"Zoo\">Zoo</option>\r\n                            <option value=\"Lake\">Lake</option>\r\n                            <option value=\"Casino\">Casino</option>\r\n                            <option value=\"Mountain\">Mountain</option>\r\n                         </Select>\r\n\r\n                           {/** Recommandation image add button */}\r\n                                                                        \r\n                                        <Input  \r\n                                        type=\"file\" \r\n                                        hidden\r\n                                        ref={el => hiddenInput = el}\r\n                                        id=\"fileInput\"\r\n                                        class=\"form-control-file\" \r\n                                        onChange={handleFileInputChange}\r\n                                        value={fileInputState}\r\n                                        />\r\n                                        {/** Recommandation image load button */}\r\n                                        \r\n                                         <Center>\r\n                                             <Button leftIcon={<AddIcon />} onClick={() => hiddenInput.click()} colorScheme=\"blue\" variant=\"outline\">\r\n                                                Add Image\r\n                                            </Button>\r\n                                         </Center>\r\n                                          {/** Preview of photo */}\r\n                                    {previewSource && (\r\n                                        <Center>\r\n                                        <Flex direction=\"column\">\r\n                                        \r\n                                             <Image\r\n                                        src={previewSource}\r\n                                        alt=\"chosen\"\r\n                                        boxSize=\"300px\"\r\n                                    />    \r\n                                   </Flex></Center>\r\n                                )}\r\n<br />\r\n                   <Center><Button type=\"submit\">Recommend !</Button></Center>     \r\n                    \r\n                    </Box>\r\n                </Collapse>\r\n            </Center></form>\r\n\r\n             {/* Recommandation list */}\r\n        \r\n        {recommandations !== null ? (\r\n            <Center>\r\n\r\n            \r\n        <Box minH=\"60vh\" mb=\"5\" w=\"800px\">\r\n          {filteredRecommandations !== null\r\n            ? filteredRecommandations.map(frec => (\r\n\r\n                  <Recommandation rec={frec} />\r\n                \r\n              ))\r\n            : recommandations.map(rec => (\r\n                \r\n                  <Recommandation rec={rec} />\r\n                \r\n              ))}\r\n        </Box>\r\n        </Center>\r\n      ):<p>loading...</p>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Recommandations\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Recommandation.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Questions.js",["155","156","157","158"],"import React,{useContext,useRef,useEffect,useState} from 'react'\r\nimport AppContext from '../context/app/AppContext'\r\nimport {useDisclosure,Image,Select,Center,Box,Flex,Heading,Input,InputGroup,InputLeftElement,Icon, Button, Collapse, Text} from '@chakra-ui/react'\r\nimport {AddIcon} from '@chakra-ui/icons'\r\nimport { MdMyLocation } from 'react-icons/md'\r\nimport Question from './Question'\r\n\r\nconst Questions = () => {\r\n\r\n    const appContext = useContext(AppContext)\r\n    const {getAllQuestions,addQuestion,\r\n        questions,filteredQuestions,clearFilterQue,\r\n            filterQueByTheme,\r\n            filterQueByLocation} = appContext\r\n            useEffect(() => {\r\n               getAllQuestions()\r\n            }, []);\r\n            \r\n    let hiddenInput = null\r\n    const [fileInputState, setFileInputState] = useState('')\r\n\r\n    const [previewSource, setPreviewSource] = useState('')\r\n\r\n    const [selectedFile, setSelectedFile] = useState()\r\n\r\n    useEffect(() => {\r\n        if(previewSource != ''){\r\n            setRec({...rec,picture:previewSource})\r\n        }\r\n    }, [previewSource]);\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file instanceof Blob){\r\n            previewFile(file);\r\n        setSelectedFile(file);\r\n        setFileInputState(e.target.value);\r\n        }else{\r\n            setPreviewSource('');\r\n            setFileInputState('');\r\n        }\r\n        \r\n    }\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        };\r\n    }\r\n    const [rec, setRec] = useState('')\r\n\r\n    const onChangeRec = e => {\r\n        setRec({...rec,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if (!selectedFile) return;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(selectedFile);\r\n        reader.onloadend = () => {\r\n            addQuestion(rec).then(() => getAllQuestions())\r\n            setFileInputState('')\r\n            setPreviewSource('')\r\n            setRec({})\r\n            onToggle()\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    \r\n\r\n    const textLoc = useRef('')\r\n    const textTheme = useRef('')\r\n\r\n    const { isOpen, onToggle } = useDisclosure()\r\n\r\n\r\n    const onChangeLoc = e => {\r\n        if(textLoc.current.value !== ''){\r\n            filterQueByLocation(e.target.value)\r\n        }\r\n        else{\r\n            clearFilterQue()\r\n        }\r\n    }\r\n\r\n    const onChangeTheme = e => {\r\n        if(textTheme.current.value !== ''){\r\n            filterQueByTheme(e.target.value)\r\n        }\r\n        else{\r\n            clearFilterQue()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {/*/Filters */}\r\n\r\n        <Box textAlign=\"center\">\r\n            <Heading>Search For Questions</Heading>\r\n          </Box>\r\n          <br />\r\n         <Center>\r\n          <Flex gridColumnGap={4} gridRowGap={4}\r\n          justify={[\"center\", \"space-between\", \"flex-end\", \"flex-end\"]}\r\n          direction={[\"column\", \"row\", \"row\", \"row\"]}\r\n          pt={[4, 4, 0, 0]} spacing={3}>\r\n                <InputGroup>\r\n                    <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<Icon color=\"gray.300\" as={MdMyLocation} />}\r\n                    />\r\n                    <Input type=\"text\" placeholder=\"Location/City\" ref={textLoc} onChange={onChangeLoc} />\r\n                </InputGroup>\r\n\r\n                <InputGroup>\r\n                    <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<Icon color=\"gray.300\" />}\r\n                    />\r\n                    <Input type=\"text\" placeholder=\"Theme\" ref={textTheme} onChange={onChangeTheme} />\r\n                </InputGroup>\r\n\r\n            </Flex>\r\n            </Center>\r\n        <br />\r\n       <Center><Button onClick={onToggle}>Add Question</Button></Center> \r\n        <br />\r\n\r\n        {/* Add Question */}\r\n        <form onSubmit={onSubmit}>\r\n            <Center>\r\n                <Collapse in={isOpen} animateOpacity>\r\n                    <Box\r\n                    p=\"40px\"\r\n                    color=\"white\"\r\n                    mt=\"4\"\r\n                    bg=\"#263238\"\r\n                    rounded=\"md\"\r\n                    shadow=\"md\"\r\n                    >\r\n                         <Input type=\"text\" placeholder=\"Description\" name=\"description\" value={rec.description} onChange={onChangeRec} />\r\n                 <br />  <Input type=\"text\" placeholder=\"City\" name=\"city\" value={rec.city} onChange={onChangeRec} />\r\n                 <br />  <Input type=\"text\" placeholder=\"Address\" name=\"location\" value={rec.location} onChange={onChangeRec} />\r\n                 <br />  <Select placeholder=\"Select a theme\" name=\"theme\" value={rec.theme} onChange={onChangeRec}>\r\n                            <option value=\"Food\">Food</option>\r\n                            <option value=\"Hotel\">Hotel</option>\r\n                            <option value=\"Monuments\">Monuments</option>\r\n                            <option value=\"Restaurants\">Restaurants</option>\r\n                            <option value=\"Museums\">Museums</option>\r\n                            <option value=\"Parks\">Parks</option>\r\n                            <option value=\"Beaches\">Beaches</option>\r\n                            <option value=\"Nature\">Nature</option>\r\n                            <option value=\"Amusement Parks\">Amusement Parks</option>\r\n                            <option value=\"Zoo\">Zoo</option>\r\n                            <option value=\"Lake\">Lake</option>\r\n                            <option value=\"Casino\">Casino</option>\r\n                            <option value=\"Mountain\">Mountain</option>\r\n                         </Select>\r\n\r\n                           {/** Recommandation image add button */}\r\n                                                                        \r\n                                        <Input  \r\n                                        type=\"file\" \r\n                                        hidden\r\n                                        ref={el => hiddenInput = el}\r\n                                        id=\"fileInput\"\r\n                                        class=\"form-control-file\" \r\n                                        onChange={handleFileInputChange}\r\n                                        value={fileInputState}\r\n                                        />\r\n                                        {/** Recommandation image load button */}\r\n                                        \r\n                                         <Center>\r\n                                             <Button leftIcon={<AddIcon />} onClick={() => hiddenInput.click()} colorScheme=\"blue\" variant=\"outline\">\r\n                                                Add Image\r\n                                            </Button>\r\n                                         </Center>\r\n                                          {/** Preview of photo */}\r\n                                    {previewSource && (\r\n                                        <Center>\r\n                                        <Flex direction=\"column\">\r\n                                        \r\n                                             <Image\r\n                                        src={previewSource}\r\n                                        alt=\"chosen\"\r\n                                        boxSize=\"300px\"\r\n                                    />    \r\n                                   </Flex></Center>\r\n                                )}\r\n<br />\r\n                   <Center><Button type=\"submit\">Ask !</Button></Center>     \r\n                    \r\n                    </Box>\r\n                </Collapse>\r\n            </Center></form>\r\n\r\n             {/* Question list */}\r\n        \r\n        {questions !== null ? (\r\n            <Center>\r\n\r\n            \r\n        <Box minH=\"60vh\" mb=\"5\" w=\"800px\">\r\n          {filteredQuestions !== null\r\n            ? filteredQuestions.map(fque => (\r\n\r\n                  <Question que={fque} />\r\n                \r\n              ))\r\n            : questions.map(que => (\r\n                \r\n                  <Question que={que} />\r\n                \r\n              ))}\r\n        </Box>\r\n        </Center>\r\n      ):<p>loading...</p>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Questions\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Question.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Meetings.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"import { Avatar, Badge, Box, Button, Center, Flex, Heading, Spacer, Text } from '@chakra-ui/react'\r\nimport React,{useContext,useEffect} from 'react'\r\nimport { MdClose, MdDone } from 'react-icons/md'\r\nimport AppContext from '../context/app/AppContext'\r\nimport AuthContext from '../context/auth/AuthContext'\r\nconst Meetings = () => {\r\n\r\n    const appContext = useContext(AppContext)\r\n    const {getUserMeetings,userMeetings,acceptMeeting,finishMeeting} = appContext\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {user} = authContext\r\n\r\n    useEffect(() => {\r\n        getUserMeetings()\r\n    }, [])\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n\r\n            {/** Pending Meetings */}\r\n\r\n\r\n            {userMeetings.length !== 0 && \r\n            <>\r\n            <Box mb='4' textAlign=\"center\">\r\n            <Heading>Pending Meetings</Heading>\r\n          </Box>\r\n            {userMeetings.map(meeting => \r\n                meeting.statut == \"pending\" ?\r\n                <Flex marginLeft=\"80\" marginBottom='5' alignItems=\"center\" maxW=\"4xl\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" boxShadow=\"lg\">\r\n\r\n            <Box p=\"4\">\r\n            {meeting.hoster._id === user.id && \r\n         <Avatar\r\n      size=\"xl\"\r\n      name=\"Kola Tioluwani\"\r\n      src={meeting.requester.profile.profilePicture}\r\n    />  }  \r\n\r\n    {meeting.requester._id === user.id && \r\n    \r\n    <Avatar\r\n      size=\"xl\"\r\n      name=\"Kola Tioluwani\"\r\n      src={meeting.hoster.profile.profilePicture}\r\n    />}\r\n            </Box>\r\n      <Box p=\"6\">\r\n        \r\n        <Box\r\n         \r\n        >\r\n          Fullname : {meeting.requester._id === user.id ? meeting.hoster.profile.fullName : meeting.requester.profile.fullName}\r\n        </Box>\r\n        <Box\r\n            color=\"gray.500\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"wide\"\r\n            fontSize=\"xs\"\r\n            textTransform=\"uppercase\"\r\n          >\r\n              {meeting.requester._id === user.id ? \r\n             <Text> Languages: {meeting.hoster.profile.languages.length !== 0 ? \r\n                meeting.hoster.profile.languages.map((language,i) => meeting.hoster.profile.languages.length == i + 1 ? language : language + '\\u2022') : 'Not Specified' }</Text> : \r\n                <Text> Languages: {meeting.requester.profile.languages.length !== 0 ? \r\n                    meeting.requester.profile.languages.map((language,i) => meeting.requester.profile.languages.length == i + 1 ? language : language + '\\u2022') : 'Not Specified' }</Text>\r\n            }\r\n         \r\n          </Box>\r\n\r\n      </Box>\r\n      <Flex direction=\"column\"\r\n      >\r\n          <Box>\r\n              Location :  {meeting.location}\r\n          </Box>\r\n          <Box>\r\n              Time :  {meeting.time}\r\n          </Box>\r\n       \r\n\r\n      </Flex>\r\n      <Box p=\"6\">\r\n        <Box d=\"flex\" alignItems=\"baseline\">\r\n         {meeting.requester._id == user.id ? \r\n         \r\n         <Badge colorScheme=\"green\" borderRadius=\"full\" px=\"2\" >\r\n            You are hosted\r\n          </Badge>\r\n         :  <Badge colorScheme=\"purple\" borderRadius=\"full\" px=\"2\" >\r\n            You Host\r\n        </Badge>} \r\n         \r\n        </Box>\r\n        </Box>\r\n      <Spacer />\r\n      {user.id == meeting.hoster._id ? \r\n      <Flex direction=\"column\" alignItems=\"center\" paddingRight=\"2\">\r\n      <Button onClick={() => acceptMeeting(meeting._id).then(_ => getUserMeetings()) } leftIcon={<MdDone/>} colorScheme=\"green\">Accept</Button>\r\n      </Flex> : \r\n      <Text pr='4'>Pending...</Text>\r\n    }\r\n      \r\n    </Flex> : <Center> <Text>No Pending Meetings...</Text>  </Center>\r\n\r\n            )} \r\n            </>\r\n            }\r\n\r\n\r\n            {/** Confirmed Meetings */}\r\n\r\n            {userMeetings.length !== 0 && \r\n            <>\r\n            <Box mb='4' textAlign=\"center\">\r\n            <Heading>Confirmed Meetings</Heading>\r\n          </Box>\r\n            {userMeetings.map(meeting => \r\n                meeting.statut == \"confirmed\" ?\r\n                <Flex marginLeft=\"80\" marginBottom='5' alignItems=\"center\" maxW=\"4xl\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" boxShadow=\"lg\">\r\n\r\n            <Box p=\"4\">\r\n            {meeting.hoster._id === user.id && \r\n         <Avatar\r\n      size=\"xl\"\r\n      name=\"Kola Tioluwani\"\r\n      src={meeting.requester.profile.profilePicture}\r\n    />  }  \r\n\r\n    {meeting.requester._id === user.id && \r\n    \r\n    <Avatar\r\n      size=\"xl\"\r\n      name=\"Kola Tioluwani\"\r\n      src={meeting.hoster.profile.profilePicture}\r\n    />}\r\n    \r\n\r\n  \r\n            </Box>\r\n      <Box p=\"6\">\r\n        \r\n        <Box\r\n         \r\n        >\r\n          Fullname : {meeting.requester._id === user.id ? meeting.hoster.profile.fullName : meeting.requester.profile.fullName}\r\n        </Box>\r\n        <Box\r\n            color=\"gray.500\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"wide\"\r\n            fontSize=\"xs\"\r\n            textTransform=\"uppercase\"\r\n          >\r\n         {meeting.requester._id === user.id ? \r\n             <Text> Languages: {meeting.hoster.profile.languages.length !== 0 ? \r\n                meeting.hoster.profile.languages.map((language,i) => meeting.hoster.profile.languages.length == i + 1 ? language : language + '\\u2022') : 'Not Specified' }</Text> : \r\n                <Text> Languages: {meeting.requester.profile.languages.length !== 0 ? \r\n                    meeting.requester.profile.languages.map((language,i) => meeting.requester.profile.languages.length == i + 1 ? language : language + '\\u2022') : 'Not Specified' }</Text>\r\n            }\r\n          </Box>\r\n\r\n      </Box>\r\n      <Flex direction=\"column\"\r\n      >\r\n          <Box>\r\n              Location :  {meeting.location}\r\n          </Box>\r\n          <Box>\r\n              Time :  {meeting.time}\r\n          </Box>\r\n       \r\n\r\n      </Flex>\r\n      <Box p=\"6\">\r\n        <Box d=\"flex\" alignItems=\"baseline\">\r\n         {meeting.requester._id == user.id ? \r\n         \r\n         <Badge colorScheme=\"green\" borderRadius=\"full\" px=\"2\" >\r\n            You are hosted\r\n          </Badge>\r\n         :  <Badge colorScheme=\"purple\" borderRadius=\"full\" px=\"2\" >\r\n            You Host\r\n        </Badge>} \r\n         \r\n        </Box>\r\n        </Box>\r\n      <Spacer />\r\n      \r\n      <Flex direction=\"row\" alignItems=\"center\" paddingRight=\"2\">\r\n      <Badge mr='2'>Meeting accepted</Badge>\r\n      <Button onClick={() => finishMeeting(meeting._id).then(_ => getUserMeetings()) } colorScheme=\"green\">Finish Meeting!</Button>\r\n      </Flex>\r\n    \r\n      \r\n    </Flex> : <Center><Text>No Confirmed meetings...</Text></Center> \r\n\r\n            )} \r\n            </>\r\n            } \r\n\r\n\r\n            {/** Finished Meetings */}\r\n\r\n            {userMeetings.length !== 0 && \r\n            <>\r\n            <Box mb='4' textAlign=\"center\">\r\n            <Heading>Finished Meetings</Heading>\r\n          </Box>\r\n            {userMeetings.map(meeting => \r\n                meeting.statut == \"finished\" ?\r\n                <Flex marginLeft=\"80\" marginBottom='5' alignItems=\"center\" maxW=\"4xl\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" boxShadow=\"lg\">\r\n\r\n            <Box p=\"4\">\r\n            {meeting.hoster._id === user.id && \r\n         <Avatar\r\n      size=\"xl\"\r\n      name=\"Kola Tioluwani\"\r\n      src={meeting.requester.profile.profilePicture}\r\n    />  }  \r\n\r\n    {meeting.requester._id === user.id && \r\n    \r\n    <Avatar\r\n      size=\"xl\"\r\n      name=\"Kola Tioluwani\"\r\n      src={meeting.hoster.profile.profilePicture}\r\n    />}\r\n            </Box>\r\n      <Box p=\"6\">\r\n        \r\n        <Box\r\n         \r\n        >\r\n          Fullname : {meeting.requester._id === user.id ? meeting.hoster.profile.fullName : meeting.requester.profile.fullName}\r\n        </Box>\r\n        <Box\r\n            color=\"gray.500\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"wide\"\r\n            fontSize=\"xs\"\r\n            textTransform=\"uppercase\"\r\n          >\r\n         {meeting.requester._id === user.id ? \r\n             <Text> Languages: {meeting.hoster.profile.languages.length !== 0 ? \r\n                meeting.hoster.profile.languages.map((language,i) => meeting.hoster.profile.languages.length == i + 1 ? language : language + '\\u2022') : 'Not Specified' }</Text> : \r\n                <Text> Languages: {meeting.requester.profile.languages.length !== 0 ? \r\n                    meeting.requester.profile.languages.map((language,i) => meeting.requester.profile.languages.length == i + 1 ? language : language + '\\u2022') : 'Not Specified' }</Text>\r\n            }\r\n          </Box>\r\n\r\n      </Box>\r\n      <Flex direction=\"column\"\r\n      >\r\n          <Box>\r\n              Location :  {meeting.location}\r\n          </Box>\r\n          <Box>\r\n              Time :  {meeting.time}\r\n          </Box>\r\n       \r\n\r\n      </Flex>\r\n      <Box p=\"6\">\r\n        <Box d=\"flex\" alignItems=\"baseline\">\r\n         {meeting.requester._id == user.id ? \r\n         \r\n         <Badge colorScheme=\"green\" borderRadius=\"full\" px=\"2\" >\r\n            You are hosted\r\n          </Badge>\r\n         :  <Badge colorScheme=\"purple\" borderRadius=\"full\" px=\"2\" >\r\n            You Host\r\n        </Badge>} \r\n         \r\n        </Box>\r\n        </Box>\r\n      \r\n      <Flex direction=\"column\" alignItems=\"center\" paddingRight=\"2\">\r\n      <Badge colorScheme=\"red\">Meeting Finished</Badge>\r\n      </Flex>\r\n    \r\n      \r\n    </Flex> : <Center> <Text>No finished Meetings...</Text></Center>\r\n\r\n            )} \r\n            </>\r\n            }      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Meetings\r\n",{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":16,"column":40,"nodeType":"180","messageId":"181","endLine":16,"endColumn":44},{"ruleId":"182","severity":1,"message":"183","line":39,"column":36,"nodeType":"184","messageId":"185","endLine":39,"endColumn":38},{"ruleId":"186","severity":1,"message":"187","line":45,"column":8,"nodeType":"188","endLine":45,"endColumn":31,"suggestions":"189"},{"ruleId":"182","severity":1,"message":"183","line":45,"column":33,"nodeType":"184","messageId":"185","endLine":45,"endColumn":35},{"ruleId":"178","severity":1,"message":"190","line":81,"column":14,"nodeType":"180","messageId":"181","endLine":81,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":11,"column":1,"nodeType":"193","endLine":65,"endColumn":2},{"ruleId":"178","severity":1,"message":"194","line":3,"column":49,"nodeType":"180","messageId":"181","endLine":3,"endColumn":59},{"ruleId":"178","severity":1,"message":"195","line":3,"column":76,"nodeType":"180","messageId":"181","endLine":3,"endColumn":86},{"ruleId":"178","severity":1,"message":"196","line":3,"column":87,"nodeType":"180","messageId":"181","endLine":3,"endColumn":92},{"ruleId":"178","severity":1,"message":"197","line":3,"column":93,"nodeType":"180","messageId":"181","endLine":3,"endColumn":98},{"ruleId":"178","severity":1,"message":"198","line":3,"column":99,"nodeType":"180","messageId":"181","endLine":3,"endColumn":105},{"ruleId":"178","severity":1,"message":"199","line":4,"column":24,"nodeType":"180","messageId":"181","endLine":4,"endColumn":45},{"ruleId":"178","severity":1,"message":"200","line":4,"column":46,"nodeType":"180","messageId":"181","endLine":4,"endColumn":54},{"ruleId":"178","severity":1,"message":"201","line":26,"column":11,"nodeType":"180","messageId":"181","endLine":26,"endColumn":21},{"ruleId":"178","severity":1,"message":"202","line":27,"column":11,"nodeType":"180","messageId":"181","endLine":27,"endColumn":19},{"ruleId":"178","severity":1,"message":"203","line":28,"column":11,"nodeType":"180","messageId":"181","endLine":28,"endColumn":18},{"ruleId":"186","severity":1,"message":"204","line":46,"column":8,"nodeType":"188","endLine":46,"endColumn":10,"suggestions":"205"},{"ruleId":"182","severity":1,"message":"183","line":156,"column":76,"nodeType":"184","messageId":"185","endLine":156,"endColumn":78},{"ruleId":"182","severity":1,"message":"183","line":221,"column":76,"nodeType":"184","messageId":"185","endLine":221,"endColumn":78},{"ruleId":"178","severity":1,"message":"206","line":3,"column":43,"nodeType":"180","messageId":"181","endLine":3,"endColumn":54},{"ruleId":"178","severity":1,"message":"194","line":3,"column":56,"nodeType":"180","messageId":"181","endLine":3,"endColumn":66},{"ruleId":"178","severity":1,"message":"207","line":3,"column":73,"nodeType":"180","messageId":"181","endLine":3,"endColumn":78},{"ruleId":"178","severity":1,"message":"208","line":3,"column":92,"nodeType":"180","messageId":"181","endLine":3,"endColumn":103},{"ruleId":"186","severity":1,"message":"209","line":31,"column":8,"nodeType":"188","endLine":31,"endColumn":10,"suggestions":"210"},{"ruleId":"186","severity":1,"message":"211","line":46,"column":8,"nodeType":"188","endLine":46,"endColumn":23,"suggestions":"212"},{"ruleId":"182","severity":1,"message":"183","line":209,"column":61,"nodeType":"184","messageId":"185","endLine":209,"endColumn":63},{"ruleId":"182","severity":1,"message":"183","line":266,"column":112,"nodeType":"184","messageId":"185","endLine":266,"endColumn":114},{"ruleId":"182","severity":1,"message":"183","line":294,"column":105,"nodeType":"184","messageId":"185","endLine":294,"endColumn":107},{"ruleId":"182","severity":1,"message":"183","line":367,"column":61,"nodeType":"184","messageId":"185","endLine":367,"endColumn":63},{"ruleId":"178","severity":1,"message":"213","line":1,"column":30,"nodeType":"180","messageId":"181","endLine":1,"endColumn":40},{"ruleId":"178","severity":1,"message":"214","line":19,"column":9,"nodeType":"180","messageId":"181","endLine":19,"endColumn":23},{"ruleId":"178","severity":1,"message":"215","line":20,"column":9,"nodeType":"180","messageId":"181","endLine":20,"endColumn":24},{"ruleId":"178","severity":1,"message":"216","line":21,"column":9,"nodeType":"180","messageId":"181","endLine":21,"endColumn":23},{"ruleId":"178","severity":1,"message":"214","line":15,"column":9,"nodeType":"180","messageId":"181","endLine":15,"endColumn":23},{"ruleId":"191","severity":1,"message":"192","line":17,"column":1,"nodeType":"193","endLine":133,"endColumn":2},{"ruleId":"217","severity":1,"message":"218","line":18,"column":5,"nodeType":"219","messageId":"220","endLine":129,"endColumn":6},{"ruleId":"178","severity":1,"message":"179","line":12,"column":12,"nodeType":"180","messageId":"181","endLine":12,"endColumn":16},{"ruleId":"186","severity":1,"message":"221","line":75,"column":8,"nodeType":"188","endLine":75,"endColumn":31,"suggestions":"222"},{"ruleId":"178","severity":1,"message":"223","line":3,"column":118,"nodeType":"180","messageId":"181","endLine":3,"endColumn":122},{"ruleId":"182","severity":1,"message":"224","line":18,"column":26,"nodeType":"184","messageId":"185","endLine":18,"endColumn":28},{"ruleId":"186","severity":1,"message":"225","line":21,"column":8,"nodeType":"188","endLine":21,"endColumn":23,"suggestions":"226"},{"ruleId":"186","severity":1,"message":"227","line":77,"column":8,"nodeType":"188","endLine":77,"endColumn":10,"suggestions":"228"},{"ruleId":"178","severity":1,"message":"223","line":3,"column":118,"nodeType":"180","messageId":"181","endLine":3,"endColumn":122},{"ruleId":"186","severity":1,"message":"229","line":17,"column":16,"nodeType":"188","endLine":17,"endColumn":18,"suggestions":"230"},{"ruleId":"182","severity":1,"message":"224","line":27,"column":26,"nodeType":"184","messageId":"185","endLine":27,"endColumn":28},{"ruleId":"186","severity":1,"message":"225","line":30,"column":8,"nodeType":"188","endLine":30,"endColumn":23,"suggestions":"231"},{"ruleId":"178","severity":1,"message":"232","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":17},{"ruleId":"186","severity":1,"message":"233","line":16,"column":8,"nodeType":"188","endLine":16,"endColumn":10,"suggestions":"234"},{"ruleId":"182","severity":1,"message":"183","line":32,"column":32,"nodeType":"184","messageId":"185","endLine":32,"endColumn":34},{"ruleId":"182","severity":1,"message":"183","line":67,"column":110,"nodeType":"184","messageId":"185","endLine":67,"endColumn":112},{"ruleId":"182","severity":1,"message":"183","line":69,"column":120,"nodeType":"184","messageId":"185","endLine":69,"endColumn":122},{"ruleId":"182","severity":1,"message":"183","line":88,"column":33,"nodeType":"184","messageId":"185","endLine":88,"endColumn":35},{"ruleId":"182","severity":1,"message":"183","line":100,"column":16,"nodeType":"184","messageId":"185","endLine":100,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":122,"column":32,"nodeType":"184","messageId":"185","endLine":122,"endColumn":34},{"ruleId":"182","severity":1,"message":"183","line":160,"column":110,"nodeType":"184","messageId":"185","endLine":160,"endColumn":112},{"ruleId":"182","severity":1,"message":"183","line":162,"column":120,"nodeType":"184","messageId":"185","endLine":162,"endColumn":122},{"ruleId":"182","severity":1,"message":"183","line":180,"column":33,"nodeType":"184","messageId":"185","endLine":180,"endColumn":35},{"ruleId":"182","severity":1,"message":"183","line":214,"column":32,"nodeType":"184","messageId":"185","endLine":214,"endColumn":34},{"ruleId":"182","severity":1,"message":"183","line":249,"column":110,"nodeType":"184","messageId":"185","endLine":249,"endColumn":112},{"ruleId":"182","severity":1,"message":"183","line":251,"column":120,"nodeType":"184","messageId":"185","endLine":251,"endColumn":122},{"ruleId":"182","severity":1,"message":"183","line":269,"column":33,"nodeType":"184","messageId":"185","endLine":269,"endColumn":35},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["237"],"'res' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'IconButton' is defined but never used.","'RadioGroup' is defined but never used.","'Stack' is defined but never used.","'Radio' is defined but never used.","'Select' is defined but never used.","'MdPermContactCalendar' is defined but never used.","'MdSearch' is defined but never used.","'textGender' is assigned a value but never used.","'textLang' is assigned a value but never used.","'textAge' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array.",["238"],"'AvatarBadge' is defined but never used.","'Image' is defined but never used.","'ModalFooter' is defined but never used.","React Hook useEffect has missing dependencies: 'getChosenProfile' and 'params.id'. Either include them or remove the dependency array.",["239"],"React Hook useEffect has missing dependencies: 'editedBirthday' and 'editedProfile'. Either include them or remove the dependency array. You can also do a functional update 'setEditedProfile(e => ...)' if you only need 'editedProfile' in the 'setEditedProfile' call.",["240"],"'useContext' is defined but never used.","'FILTER_PRO_GEN' is defined but never used.","'FILTER_PRO_LANG' is defined but never used.","'FILTER_PRO_AGE' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'getChosenProfile'. Either include it or remove the dependency array.",["241"],"'Text' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'rec'. Either include it or remove the dependency array. You can also do a functional update 'setRec(r => ...)' if you only need 'rec' in the 'setRec' call.",["242"],"React Hook useEffect has a missing dependency: 'getAllRecommandations'. Either include it or remove the dependency array.",["243"],"React Hook useEffect has a missing dependency: 'getAllQuestions'. Either include it or remove the dependency array.",["244"],["245"],"'MdClose' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserMeetings'. Either include it or remove the dependency array.",["246"],"no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"257","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [error, isAuthenticated, props.history]",{"range":"266","text":"267"},"Update the dependencies array to be: [getProfiles]",{"range":"268","text":"269"},"Update the dependencies array to be: [getChosenProfile, params.id]",{"range":"270","text":"271"},"Update the dependencies array to be: [chosenProfile, editedBirthday, editedProfile]",{"range":"272","text":"273"},"Update the dependencies array to be: [props.history, profile, getChosenProfile]",{"range":"274","text":"275"},"Update the dependencies array to be: [previewSource, rec]",{"range":"276","text":"277"},"Update the dependencies array to be: [getAllRecommandations]",{"range":"278","text":"279"},"Update the dependencies array to be: [getAllQuestions]",{"range":"280","text":"281"},{"range":"282","text":"277"},"Update the dependencies array to be: [getUserMeetings]",{"range":"283","text":"284"},[1012,1035],"[error, isAuthenticated, props.history]",[1527,1529],"[getProfiles]",[1347,1349],"[getChosenProfile, params.id]",[1821,1836],"[chosenProfile, editedBirthday, editedProfile]",[2387,2410],"[props.history, profile, getChosenProfile]",[778,793],"[previewSource, rec]",[2371,2373],"[getAllRecommandations]",[720,722],"[getAllQuestions]",[1079,1094],[607,609],"[getUserMeetings]"]