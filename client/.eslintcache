[{"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\index.js":"1","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\App.js":"2","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Login.js":"3","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Signup.js":"4","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthContext.js":"5","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthState.js":"6","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\axios\\AuthApi.js":"7","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\utils\\setAuthToken.js":"8","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\types.js":"9","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthReducer.js":"10","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\axios\\GeneralApi.js":"11","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Community.js":"12","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Header.js":"13","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\utils\\theme.js":"14","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\ColorModeSwitch.js":"15","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Profile.js":"16","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppState.js":"17","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppContext.js":"18","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppReducer.js":"19","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\AddProfile.js":"20","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Recommandations.js":"21","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Recommandation.js":"22","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Questions.js":"23","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Question.js":"24","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Meetings.js":"25"},{"size":327,"mtime":1611460208516,"results":"26","hashOfConfig":"27"},{"size":1538,"mtime":1612796888925,"results":"28","hashOfConfig":"27"},{"size":2533,"mtime":1612646805067,"results":"29","hashOfConfig":"27"},{"size":2941,"mtime":1612185083123,"results":"30","hashOfConfig":"27"},{"size":105,"mtime":1611282743008,"results":"31","hashOfConfig":"27"},{"size":2981,"mtime":1612266162589,"results":"32","hashOfConfig":"27"},{"size":131,"mtime":1611630977037,"results":"33","hashOfConfig":"27"},{"size":275,"mtime":1611283873900,"results":"34","hashOfConfig":"27"},{"size":1001,"mtime":1612795167437,"results":"35","hashOfConfig":"27"},{"size":2061,"mtime":1612265724480,"results":"36","hashOfConfig":"27"},{"size":101,"mtime":1611741012225,"results":"37","hashOfConfig":"27"},{"size":6964,"mtime":1612801699820,"results":"38","hashOfConfig":"27"},{"size":5809,"mtime":1612796912410,"results":"39","hashOfConfig":"27"},{"size":359,"mtime":1611462598743,"results":"40","hashOfConfig":"27"},{"size":452,"mtime":1611460162337,"results":"41","hashOfConfig":"27"},{"size":23708,"mtime":1612715108560,"results":"42","hashOfConfig":"27"},{"size":7487,"mtime":1612804294685,"results":"43","hashOfConfig":"27"},{"size":103,"mtime":1611817859849,"results":"44","hashOfConfig":"27"},{"size":4860,"mtime":1612804489953,"results":"45","hashOfConfig":"27"},{"size":6412,"mtime":1612265488183,"results":"46","hashOfConfig":"27"},{"size":8537,"mtime":1612625088427,"results":"47","hashOfConfig":"27"},{"size":3890,"mtime":1612628729688,"results":"48","hashOfConfig":"27"},{"size":8436,"mtime":1612650187088,"results":"49","hashOfConfig":"27"},{"size":3888,"mtime":1612649553857,"results":"50","hashOfConfig":"27"},{"size":7420,"mtime":1612803597776,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1cvufhj",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\index.js",[],["111","112"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\App.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Login.js",["113","114","115"],"import {useState,useContext,useEffect} from 'react'\r\nimport AuthContext from '../context/auth/AuthContext'\r\n\r\nimport {Flex,\r\n    Box,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    useToast } from \"@chakra-ui/react\"\r\n\r\nconst Login = props => {\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {login,isAuthenticated,error,user} = authContext\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    const errorToast = useToast()\r\n\r\n    const onChangeUsername = e => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = e => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n                if(error !== null){\r\n                    setUsername('')\r\n                    setPassword('')\r\n                }\r\n\r\n                if(isAuthenticated == \"true\"){\r\n                      props.history.push('/community')\r\n                }\r\n               \r\n\r\n        \r\n    }, [error,isAuthenticated]);\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if(username !== '' && password !== ''){\r\n            const data = {\r\n                username,\r\n                password\r\n            }\r\n            login(data)\r\n        }else{\r\n          errorToast({\r\n            title: 'Empty Fields',\r\n            description: \"Fill all the fields.\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n        })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n        <Box bg=\"brand.100\" p={8} maxWidth=\"500px\" borderWidth={1} borderRadius={8} boxShadow=\"lg\" marginTop={50}>\r\n          <Box textAlign=\"center\">\r\n            <Heading>Login</Heading>\r\n          </Box>\r\n          <Box my={4} textAlign=\"left\">\r\n            <form onSubmit={onSubmit}>\r\n              <FormControl>\r\n                <FormLabel>Username</FormLabel>\r\n                <Input type=\"text\" value={username} placeholder=\"test\" onChange={onChangeUsername} />\r\n              </FormControl>\r\n              <FormControl mt={6}>\r\n                <FormLabel>Password</FormLabel>\r\n                <Input type=\"password\" value={password} placeholder=\"*******\" onChange={onChangePassword} />\r\n              </FormControl>\r\n              <Button width=\"full\" mt={4} type=\"submit\">\r\n                Sign In\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Signup.js",["116"],"import {useState,useContext,useEffect} from 'react'\r\nimport AuthContext from '../context/auth/AuthContext'\r\n\r\nimport {Flex,\r\n    Box,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    useToast } from \"@chakra-ui/react\"\r\n\r\nconst Signup = props => {\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {signup,isRegistered,error} = authContext\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    const errorToast = useToast()\r\n\r\n\r\n    const onChangeUsername = e => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const onChangeEmail = e => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = e => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n                if(error !== null){\r\n                    setUsername('')\r\n                    setPassword('')\r\n                }\r\n\r\n                if(isRegistered == true){\r\n                      props.history.push('/login')\r\n                }\r\n               \r\n\r\n        \r\n    }, [error,isRegistered,props.history]);\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if(username !== '' && password !== '' && email !== ''){\r\n            const data = {\r\n                username,\r\n                email,\r\n                password,\r\n                roles: [\"user\"]\r\n            }\r\n            signup(data)\r\n        }else{\r\n          errorToast({\r\n            title: 'Empty Fields',\r\n            description: \"Fill all the fields.\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n        })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n        <Box bg=\"brand.100\" p={8} maxWidth=\"500px\" borderWidth={1} borderRadius={8} boxShadow=\"lg\" marginTop={50}>\r\n          <Box textAlign=\"center\">\r\n            <Heading>Sign Up</Heading>\r\n          </Box>\r\n          <Box my={4} textAlign=\"left\">\r\n            <form onSubmit={onSubmit}>\r\n              <FormControl>\r\n                <FormLabel>Username</FormLabel>\r\n                <Input type=\"text\" value={username} placeholder=\"test\" onChange={onChangeUsername} />\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel>Email</FormLabel>\r\n                <Input type=\"text\" value={email} placeholder=\"test@mail.com\" onChange={onChangeEmail} />\r\n              </FormControl>\r\n              <FormControl mt={6}>\r\n                <FormLabel>Password</FormLabel>\r\n                <Input type=\"password\" value={password} placeholder=\"*******\" onChange={onChangePassword} />\r\n              </FormControl>\r\n              <Button width=\"full\" mt={4} type=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthContext.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthState.js",["117"],"import React, { useReducer } from 'react';\r\nimport AuthContext from './AuthContext'\r\nimport AuthReducer from './AuthReducer'\r\nimport authApi from '../../axios/AuthApi'\r\nimport generalApi from '../../axios/GeneralApi'\r\nimport setAuthToken from '../../utils/setAuthToken'\r\n\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_SUCCESS,\r\n    PERSIST_PROFILE,\r\n    REGISTER_FAIL,\r\n    LOGOUT\r\n} from '../types'\r\n\r\nconst AuthState = props => {\r\n\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        isAuthenticated: localStorage.getItem('isAuth'),\r\n        isRegistered: false,\r\n        user: JSON.parse(localStorage.getItem('user')) ,\r\n        profile: JSON.parse(localStorage.getItem('profile')),\r\n        error: null\r\n    }\r\n\r\n   const [state, dispatch] = useReducer(AuthReducer, initialState)\r\n\r\n   // Action :\r\n\r\n\r\n   const addProfile = async data => {\r\n    \r\n    setAuthToken(localStorage.token)\r\n    //console.log('Hey update here')\r\n    try{\r\n     \r\n    const res = await generalApi.post('/api/profiles',data)\r\n\r\n    dispatch({\r\n        type: PERSIST_PROFILE,\r\n        payload: res.data\r\n    })\r\n    \r\n\r\n    } catch(err){\r\n        console.log(err.message)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n   // Login User\r\n   const login = async formData => {\r\n\r\n    try {\r\n        const res = await authApi.post('/api/auth/signin', formData)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        setAuthToken(res.data.accessToken)\r\n        loadProfile(res.data.id)\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: 'Invalid Credentials!'\r\n        })\r\n    }\r\n}\r\n\r\n // Resister User\r\n const signup = async formData => {\r\n\r\n    try {\r\n       const res = await authApi.post('/api/auth/signup', formData)\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: REGISTER_FAIL,\r\n            payload: err.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Load User Profile\r\nconst loadProfile = async userId => {\r\n\r\n    try {\r\n       const res = await generalApi.get(`/api/profiles/user/${userId}`)\r\n       console.log('profile data : ',res.data)\r\n\r\n        dispatch({\r\n            type: PERSIST_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n   // Logout\r\n   const logout = () => {\r\n    dispatch({type: LOGOUT})\r\n    }\r\n\r\n\r\n   return (\r\n       <AuthContext.Provider \r\n       value={{\r\n           token: state.token,\r\n           isAuthenticated: state.isAuthenticated,\r\n           isRegistered: state.isRegistered,\r\n           user: state.user,\r\n           profile : state.profile,\r\n           error: state.error,\r\n           login,\r\n           signup,\r\n           loadProfile,\r\n           addProfile,\r\n           logout\r\n       }}>\r\n\r\n           {props.children}\r\n       </AuthContext.Provider>\r\n   )\r\n\r\n}\r\nexport default AuthState","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\axios\\AuthApi.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\types.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\auth\\AuthReducer.js",["118"],"import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_SUCCESS,\r\n    PERSIST_PROFILE,\r\n    REGISTER_FAIL,\r\n    LOGOUT\r\n} from '../types'\r\n\r\n\r\nexport default (state,action) => {\r\n    switch(action.type){\r\n\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token',action.payload.accessToken)\r\n            localStorage.setItem('isAuth',\"true\")\r\n            localStorage.setItem('user',JSON.stringify(action.payload) )\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                token: action.payload.accessToken,\r\n                isAuthenticated: \"true\",\r\n                error: null\r\n            }\r\n            case LOGIN_FAIL:\r\n            case REGISTER_FAIL:\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('isAuth')\r\n            localStorage.removeItem('user')\r\n            return {\r\n                ...state,\r\n                token:null,\r\n                isAuthenticated: 'false',\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n                case REGISTER_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    isRegistered: true\r\n                }\r\n                case LOGOUT:\r\n                    localStorage.removeItem('token')\r\n                    localStorage.removeItem('user')\r\n                    localStorage.setItem('isAuth','false')\r\n                    localStorage.removeItem('profile')\r\n                    return {\r\n                        ...state,\r\n                        token:null,\r\n                        isAuthenticated: \"false\",\r\n                        user: null,\r\n                        profile: null,\r\n                        error: action.payload\r\n                    }\r\n            case PERSIST_PROFILE:\r\n                localStorage.setItem('profile',JSON.stringify(action.payload) )\r\n            return {\r\n                ...state,\r\n               profile: action.payload\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\axios\\GeneralApi.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Community.js",["119","120"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Header.js",["121","122","123"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\utils\\theme.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\ColorModeSwitch.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Profile.js",["124","125","126","127","128","129","130"],"import React,{useEffect,useContext,useState} from 'react'\r\nimport {AddIcon, EditIcon} from \"@chakra-ui/icons\"\r\nimport {Box ,Input,Flex,Modal,ModalOverlay,ModalContent,Spinner,ModalCloseButton,ModalBody,ModalFooter, useDisclosure ,Text,Image, Icon, Spacer, Button, Heading, Textarea, Select, IconButton, Center} from \"@chakra-ui/react\"\r\nimport {MdEdit,MdPermContactCalendar,MdPersonAdd,MdChat, MdFavorite, MdGroupWork, MdLanguage, MdFitnessCenter, MdSave, MdKeyboardReturn} from 'react-icons/md'\r\nimport AppContext from '../context/app/AppContext'\r\nimport AuthContext from '../context/auth/AuthContext'\r\nimport moment from 'moment'\r\n\r\nconst Profile = props => {\r\n\r\n    \r\n    let hiddenInput = null\r\n    let hiddenInput2 = null\r\n    const { match: { params } } = props \r\n\r\n    const appContext = useContext(AppContext)\r\n    const {getChosenProfile,chosenProfile,updateProfile,addPhotoToPortfolio,editProfilePhoto} = appContext\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {user} = authContext\r\n\r\n    const [modalImage, setModalImage] = useState('')\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [editedProfile,setEditedProfile] = useState({})\r\n    const [editedBirthday, setEditedBirthday] = useState({\r\n        day:'',month:'',year:''\r\n    })\r\n\r\n    useEffect(() => {\r\n        getChosenProfile(params.id)\r\n    }, [])\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(chosenProfile !== null){\r\n            setEditedProfile({...editedProfile,\r\n                ...chosenProfile\r\n        })\r\n        let day = moment(chosenProfile.birthDate,'DD-MM-YYYY').date()\r\n        let month = moment(chosenProfile.birthDate,'DD-MM-YYYY').month()+1\r\n        let year = moment(chosenProfile.birthDate,'DD-MM-YYYY').year()\r\n        setEditedBirthday({...editedBirthday, day,month,year })\r\n\r\n        }\r\n    }, [chosenProfile])\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    const handleOpen = image => {\r\n        setModalImage(image)\r\n        onOpen()\r\n    }\r\n\r\n    const onChangeEdited = e => {\r\n        setEditedProfile({...editedProfile,\r\n                    [e.target.name]:e.target.value\r\n            })\r\n    }\r\n\r\n    const onChangeSelectLanguage = e => {\r\n        if(!editedProfile.languages.includes(e.target.value)){\r\n            setEditedProfile({...editedProfile,\r\n                    [e.target.name]:[...editedProfile.languages,e.target.value]\r\n            })\r\n        }else{\r\n            setEditedProfile({...editedProfile,\r\n                [e.target.name]:editedProfile.languages.filter(lang => lang !== e.target.value)\r\n        })\r\n        }\r\n        \r\n    }\r\n\r\n    const onChangeSelectHobby = e => {\r\n        if(!editedProfile.hobbies.includes(e.target.value)){\r\n            setEditedProfile({...editedProfile,\r\n                    [e.target.name]:[...editedProfile.hobbies,e.target.value]\r\n            })\r\n        }else{\r\n            setEditedProfile({...editedProfile,\r\n                [e.target.name]:editedProfile.hobbies.filter(hob => hob !== e.target.value)\r\n        })\r\n        }\r\n        \r\n    }\r\n\r\n    const onChangeEditedBirthday = e => {\r\n        setEditedBirthday({...editedBirthday,\r\n                [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    \r\n    const [fileInputState, setFileInputState] = useState('')\r\n    const [fileInputState2, setFileInputState2] = useState('')\r\n    const [previewSource, setPreviewSource] = useState('');\r\n    const [previewSource2, setPreviewSource2] = useState('');\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [selectedFile2, setSelectedFile2] = useState();\r\n\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file instanceof Blob){\r\n            previewFile(file);\r\n        setSelectedFile(file);\r\n        setFileInputState(e.target.value);\r\n        }else{\r\n            setPreviewSource('');\r\n            setFileInputState('');\r\n        }\r\n        \r\n    }\r\n                        const handleFileInputChange2 = (e) => {\r\n                            const file = e.target.files[0];\r\n                            if(file instanceof Blob){\r\n                            previewFile2(file);\r\n                            setSelectedFile2(file);\r\n                            setFileInputState2(e.target.value);\r\n                            }else{\r\n                                setPreviewSource2('');\r\n                                setFileInputState2('');\r\n                            }\r\n                            \r\n                        }\r\n                        const handleSetProfilePhoto = () => {\r\n                            if (!selectedFile2) return;\r\n                            const reader = new FileReader();\r\n                            reader.readAsDataURL(selectedFile2);\r\n                            reader.onloadend = () => {\r\n                                let data = {profilePicture:reader.result}\r\n                                console.log('data : ',data)\r\n                                editProfilePhoto(data,chosenProfile._id)\r\n                                \r\n                                setFileInputState2('')\r\n                                setPreviewSource2('')\r\n                                \r\n                            }\r\n                        }\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        };\r\n    };\r\n\r\n    const previewFile2 = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource2(reader.result);\r\n        };\r\n    };\r\n\r\n    const addPhotoToPortfolioLocal = () => {\r\n        if (!selectedFile) return;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(selectedFile);\r\n        reader.onloadend = () => {\r\n            let data = {portfolio:reader.result}\r\n            addPhotoToPortfolio(data,chosenProfile._id)\r\n            setFileInputState('')\r\n            setPreviewSource('')\r\n        }\r\n        \r\n        \r\n\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        let birthDate = editedBirthday.day+\"-\"+editedBirthday.month+\"-\"+editedBirthday.year\r\n        editedProfile.birthDate = birthDate\r\n        updateProfile(editedProfile)\r\n        setEditMode(false)\r\n    }\r\n\r\n    const [showAddingButton, setShowAddingButton] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if(previewSource !== ''){\r\n            setShowAddingButton(false)\r\n        }else{\r\n            setShowAddingButton(true)\r\n        }\r\n    }, [previewSource]);\r\n\r\n    return (\r\n        <>\r\n        {chosenProfile !== null ? \r\n        \r\n        <Flex direction=\"row\">\r\n\r\n            {/** Profile pic + infos */}\r\n                <Flex direction=\"column\" marginLeft='12' mb='18'>\r\n\r\n                                        {/** Profile Photo add button */}\r\n                                                                        \r\n                                        <Input  \r\n                                        type=\"file\" \r\n                                        hidden\r\n                                        ref={el => hiddenInput2 = el}\r\n                                        id=\"fileInput\"\r\n                                        class=\"form-control-file\" \r\n                                        onChange={handleFileInputChange2}\r\n                                        value={fileInputState2}\r\n                                        />\r\n                                        {/** Profile image load button */}\r\n                                        {chosenProfile.user == user.id && \r\n                                        <IconButton\r\n                                            variant=\"outline\"\r\n                                            colorScheme=\"teal\"\r\n                                            aria-label=\"Send email\"\r\n                                            width=\"40px\"\r\n                                            onClick={() => hiddenInput2.click()}\r\n                                            icon={<EditIcon />}\r\n                                            />}\r\n\r\n                                            {/** Preview of profile photo */}\r\n                                    {previewSource2 && (\r\n                                        <Center>\r\n                                        <Flex direction=\"column\">\r\n                                        \r\n                                             <Image\r\n                                        src={previewSource2}\r\n                                        alt=\"chosen\"\r\n                                        boxSize=\"300px\"\r\n                                    />\r\n                                     <Button width=\"200px\" onClick={handleSetProfilePhoto} >Add Image</Button>\r\n                                        \r\n                                   </Flex></Center>\r\n                                )}\r\n\r\n                    <Box border=\"2px\" borderColor=\"gray.500\">\r\n                    \r\n                        <Image border=\"2px\" borderColor=\"black.100\" m='1.5' marginBottom='2' boxSize=\"300px\" src={chosenProfile.profilePicture} alt=\"naruto\" objectFit=\"cover\" />\r\n                   \r\n                            {/** Followers */}\r\n                        <Flex my='2' alignItems=\"center\" direction=\"row\" bg=\"#EEEEEE\" px=\"1\" mx=\"1\" borderRadius=\"3px\" boxShadow=\"base\" >\r\n                                <Icon color=\"#BDBDBD\" w={8} h={8} as={MdFavorite} />\r\n                                &nbsp;  <Text color=\"#9E9E9E\" fontSize=\"md\" fontWeight=\"bold\" fontFamily=\"sans-serif\">Friends</Text> \r\n                                <Spacer />\r\n                                <Box bg=\"#1976D2\" borderColor=\"blue.500\" borderRadius=\"full\" > \r\n                                    <Text px='1' color=\"white\" fontFamily=\"sans-serif\" fontSize=\"sm\" >70</Text>\r\n                                </Box>\r\n                           </Flex>\r\n                            \r\n                           {/** Meetings */}\r\n                           <Flex my='2' alignItems=\"center\" direction=\"row\" bg=\"#EEEEEE\" px=\"1\" mx=\"1\" borderRadius=\"3px\" boxShadow=\"base\">\r\n                                    <Icon color=\"#BDBDBD\" w={8} h={8} as={MdGroupWork} />\r\n                                &nbsp;  <Text color=\"#9E9E9E\" fontSize=\"md\" fontWeight=\"bold\" fontFamily=\"sans-serif\">Meetings</Text> \r\n                                <Spacer />\r\n                                <Box bg=\"#1976D2\" borderColor=\"blue.500\" borderRadius=\"full\" > \r\n                                    <Text px='1' color=\"white\" fontFamily=\"sans-serif\" fontSize=\"sm\" >120</Text>\r\n                                </Box>\r\n                           </Flex>\r\n\r\n                           {/** Languages */}\r\n                           <Flex my='2' alignItems=\"center\" direction=\"row\" bg=\"#EEEEEE\" px=\"1\" mx=\"1\" borderRadius=\"3px\" boxShadow=\"base\">\r\n                                    <Icon color=\"#BDBDBD\" w={8} h={8} as={MdLanguage} />\r\n                                &nbsp;  <Text color=\"#9E9E9E\" fontSize=\"md\" fontWeight=\"bold\" fontFamily=\"sans-serif\">Languages</Text> \r\n                                <Spacer />\r\n                                 \r\n                                    <Text px='1' color=\"#9E9E9E\" fontFamily=\"sans-serif\" fontSize=\"sm\" >\r\n                                    {chosenProfile.languages && chosenProfile.languages.length !== 0 ? \r\n                                    chosenProfile.languages.map((language,i) => chosenProfile.languages.length == i + 1 ? language : language + '\\u2022') : 'Not Specified' }\r\n\r\n                                    </Text>\r\n                               \r\n                           </Flex>\r\n\r\n                           {/** Age */}\r\n                           <Flex my='2' alignItems=\"center\" direction=\"row\" bg=\"#EEEEEE\" px=\"1\" mx=\"1\" borderRadius=\"3px\" boxShadow=\"base\">\r\n                                    <Icon color=\"#BDBDBD\" w={8} h={8} as={MdPermContactCalendar} />\r\n                                &nbsp;  <Text color=\"#9E9E9E\" fontSize=\"md\" fontWeight=\"bold\" fontFamily=\"sans-serif\">Age</Text> \r\n                                <Spacer />\r\n                                <Box bg=\"#1976D2\" borderColor=\"blue.500\" borderRadius=\"full\" > \r\n                                    <Text px='1' color=\"white\" fontFamily=\"sans-serif\" fontSize=\"sm\" >\r\n                                        \r\n                                        {moment.duration(moment().diff(moment(chosenProfile.birthDate,'DD-MM-YYYY'))).years()}\r\n                                        \r\n                                    </Text>\r\n                                </Box>\r\n                           </Flex>\r\n\r\n                            {/** Hobbies */}\r\n                            <Flex my='2' alignItems=\"center\" direction=\"row\" bg=\"#EEEEEE\" px=\"1\" mx=\"1\" borderRadius=\"3px\" boxShadow=\"base\">\r\n                                    <Icon color=\"#BDBDBD\" w={8} h={8} as={MdFitnessCenter} />\r\n                                &nbsp;  <Text color=\"#9E9E9E\" fontSize=\"md\" fontWeight=\"bold\" fontFamily=\"sans-serif\">Hobbies</Text> \r\n                                <Spacer />\r\n                                \r\n                                    <Text px='1' color=\"#9E9E9E\" fontFamily=\"sans-serif\" fontSize=\"sm\" >\r\n                                    {chosenProfile.hobbies && chosenProfile.hobbies.length !== 0 ? \r\n                                    chosenProfile.hobbies.map((hobby,i) => chosenProfile.hobbies.length == i + 1 ? hobby : hobby + '\\u2022') : 'Not Specified' }\r\n                                    </Text>\r\n                               \r\n                           </Flex>\r\n                                {/** Buttons */}\r\n                        { chosenProfile.user !== user.id ?  \r\n                        \r\n                        <Flex direction=\"row\">\r\n                           <Button marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdPersonAdd} />\r\n                                <Text>Add Friend</Text>\r\n                            </Button>\r\n                            <Button marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdChat} />\r\n                                <Text>Contact</Text>\r\n                            </Button>\r\n                           </Flex> \r\n                           :\r\n                           \r\n                           <Flex direction=\"row\">\r\n                           <Button onClick={() => setEditMode(true)} marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdEdit} />\r\n                                <Text>Edit Profile</Text>\r\n                            </Button>\r\n                            <Button marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdPermContactCalendar} />\r\n                                <Text>Meetings</Text>\r\n                            </Button>\r\n                           </Flex> \r\n                        }\r\n                           \r\n\r\n                    </Box>\r\n\r\n                </Flex>\r\n\r\n\r\n\r\n             {/** portfolio + desc */}\r\n\r\n                <Flex direction=\"column\">\r\n                                        \r\n\r\n                                  {/** Preview of photo */}\r\n                                    {previewSource && (\r\n                                        <Center>\r\n                                        <Flex direction=\"column\">\r\n                                        \r\n                                             <Image\r\n                                        src={previewSource}\r\n                                        alt=\"chosen\"\r\n                                        boxSize=\"300px\"\r\n                                    />\r\n                                     <Button width=\"200px\" onClick={addPhotoToPortfolioLocal}  hidden={showAddingButton}>Add To portfolio</Button>\r\n                                        \r\n                                   </Flex></Center>\r\n                                )}\r\n                               \r\n                                \r\n\r\n\r\n                                        {/** Portfolio hidden add button */}\r\n                                                                        \r\n                                        <Input  \r\n                                        type=\"file\" \r\n                                        hidden\r\n                                        ref={el => hiddenInput = el}\r\n                                        id=\"fileInput\"\r\n                                        class=\"form-control-file\" \r\n                                        onChange={handleFileInputChange}\r\n                                        value={fileInputState}\r\n                                        />\r\n                                        {/** Portfolio image load button */}\r\n                                        {chosenProfile.user == user.id && \r\n                                        <IconButton\r\n                                            marginLeft=\"200\"\r\n                                            variant=\"outline\"\r\n                                            colorScheme=\"teal\"\r\n                                            aria-label=\"Send email\"\r\n                                            width=\"40px\"\r\n                                            onClick={() => hiddenInput.click()}\r\n                                            icon={<AddIcon />}\r\n                                            />}\r\n                                            \r\n\r\n                    <Flex overflowX=\"scroll\" direction=\"row\" marginLeft=\"200\">\r\n                    {chosenProfile.portfolio.length !== 0 && \r\n                     chosenProfile.portfolio.slice(0).reverse().map(image => \r\n                     \r\n                        <Image cursor=\"pointer\" onClick={() => handleOpen(image)}  m='1.5' marginBottom='2' boxSize=\"250px\" src={image} alt=\"naruto\" objectFit=\"cover\" />\r\n                    \r\n                     )\r\n                    }\r\n                       </Flex>\r\n\r\n                       <Modal isOpen={isOpen} onClose={onClose}>\r\n                            <ModalOverlay />\r\n                            <ModalContent>\r\n                           \r\n                            <ModalCloseButton />\r\n                            <ModalBody>\r\n                            <Image   boxSize=\"500px\" src={modalImage} alt=\"naruto\" objectFit=\"cover\" />\r\n                            </ModalBody>\r\n                            </ModalContent>\r\n                        </Modal>\r\n\r\n                { editMode ? \r\n                \r\n                <Flex mx='200' direction=\"column\">\r\n                        {/** Here gooes editing form */}\r\n                        <form onSubmit={onSubmit}>\r\n                        <Flex direction=\"column\">\r\n                             <Heading>Full Name</Heading>\r\n                             <Input type=\"text\" name=\"fullName\" placeholder=\"Full Name\" value={editedProfile.fullName} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                        <Flex direction=\"column\">\r\n                             <Heading>Bio</Heading>\r\n                             <Textarea type=\"text\" name=\"description\" placeholder=\"Bio\" value={editedProfile.description} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                    \r\n                    <Flex direction=\"row\">\r\n                               <Box>\r\n                                <Heading>Languages</Heading>\r\n                                <Select name=\"languages\" placeholder=\"Select option\" multiple height='100px' width=\"300px\" value={editedProfile.languages} onChange={onChangeSelectLanguage}>\r\n                                    <option value=\"German\">German</option>\r\n                                    <option value=\"English\">English</option>\r\n                                    <option value=\"French\">French</option>\r\n                                    <option value=\"Dutch\">Dutch</option>\r\n                                    <option value=\"Italian\">Italian</option>\r\n                                </Select>  \r\n                                </Box>\r\n\r\n                                <Spacer />\r\n\r\n                                <Box>\r\n                                <Heading>Hobbies</Heading>\r\n                                <Select name=\"hobbies\" placeholder=\"Select option\" multiple height='100px' width=\"300px\" value={editedProfile.hobbies} onChange={onChangeSelectHobby}>\r\n                                    <option value=\"Football\">Football</option>\r\n                                    <option value=\"Skydiving\">Skydiving</option>\r\n                                    <option value=\"Swimming\">Swimming</option>\r\n                                    <option value=\"Tennis\">Tennis</option>\r\n                                    <option value=\"Art\">Art</option>\r\n                                </Select>  \r\n                                </Box>\r\n\r\n                    </Flex>\r\n\r\n                        <Flex direction=\"column\">\r\n                             <Heading>City</Heading>\r\n                             <Input type=\"text\" name=\"city\" placeholder=\"City\" value={editedProfile.city} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                        \r\n                        <Flex direction=\"column\">\r\n                             <Heading>Address</Heading>\r\n                             <Textarea type=\"text\" name=\"address\" placeholder=\"Address\" value={editedProfile.address} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                        <Box>\r\n                        <Heading>Birthday</Heading>\r\n                        <Flex direction=\"row\">\r\n                        <Input type=\"number\" name=\"day\" placeholder=\"Day\" value={editedBirthday.day} onChange={onChangeEditedBirthday} />\r\n                        <Input type=\"number\" name=\"month\" placeholder=\"Month\" value={editedBirthday.month} onChange={onChangeEditedBirthday} />\r\n                        <Input type=\"number\" name=\"year\" placeholder=\"Year\" value={editedBirthday.year} onChange={onChangeEditedBirthday} />\r\n                        </Flex>\r\n                        </Box>\r\n                        <br />\r\n                        <Button type=\"submit\" marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdSave} />\r\n                                <Text>Save Changes</Text>\r\n                        </Button>\r\n                        <Button onClick={() => setEditMode(false)} marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdKeyboardReturn} />\r\n                                <Text>Return</Text>\r\n                        </Button>\r\n                        </form>\r\n                </Flex> \r\n                \r\n                    :   \r\n                \r\n                            <Box marginLeft=\"200\">\r\n                                <Heading>{chosenProfile.fullName}</Heading>\r\n                                <Text  fontSize=\"xl\">\r\n                                {chosenProfile.description}\r\n                                </Text>\r\n                            </Box> \r\n                     }\r\n                     \r\n                      \r\n\r\n                </Flex>\r\n\r\n\r\n\r\n            </Flex> : \r\n\r\n            <Box>\r\n                <Spinner size=\"xl\" />\r\n            </Box>\r\n            \r\n        }\r\n            \r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppState.js",["131"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppContext.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\context\\app\\AppReducer.js",["132","133"],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\AddProfile.js",["134","135"],"import { Box, Button, Spacer,Text, Flex, Heading, Icon, Input, Select, Textarea } from '@chakra-ui/react'\r\nimport React,{useEffect,useContext,useState} from 'react'\r\nimport { MdSave } from 'react-icons/md'\r\nimport AuthContext from '../context/auth/AuthContext'\r\n\r\nimport AppContext from '../context/app/AppContext'\r\n\r\nconst AddProfile = props => {\r\n    \r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {user,addProfile,profile} = authContext\r\n\r\n    const appContext = useContext(AppContext)\r\n    const {getChosenProfile} = appContext\r\n\r\n    const [editedProfile,setEditedProfile] = useState({hobbies:[],\r\n    languages:[]})\r\n    const [editedBirthday, setEditedBirthday] = useState({\r\n        day:'',month:'',year:''\r\n    })\r\n\r\n    const onChangeEdited = e => {\r\n        setEditedProfile({...editedProfile,\r\n                    [e.target.name]:e.target.value\r\n            })\r\n    }\r\n\r\n    const onChangeSelectLanguage = e => {\r\n        if(!editedProfile.languages.includes(e.target.value)){\r\n            setEditedProfile({...editedProfile,\r\n                    [e.target.name]:[...editedProfile.languages,e.target.value]\r\n            })\r\n        }else{\r\n            setEditedProfile({...editedProfile,\r\n                [e.target.name]:editedProfile.languages.filter(lang => lang !== e.target.value)\r\n        })\r\n        }\r\n        \r\n    }\r\n\r\n    const onChangeSelectHobby = e => {\r\n        if(!editedProfile.hobbies.includes(e.target.value)){\r\n            setEditedProfile({...editedProfile,\r\n                    [e.target.name]:[...editedProfile.hobbies,e.target.value]\r\n            })\r\n        }else{\r\n            setEditedProfile({...editedProfile,\r\n                [e.target.name]:editedProfile.hobbies.filter(hob => hob !== e.target.value)\r\n        })\r\n        }\r\n        \r\n    }\r\n\r\n    const onChangeEditedBirthday = e => {\r\n        setEditedBirthday({...editedBirthday,\r\n                [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        let birthDate = editedBirthday.day+\"-\"+editedBirthday.month+\"-\"+editedBirthday.year\r\n        editedProfile.birthDate = birthDate\r\n        addProfile(editedProfile)\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(profile !== null){\r\n            getChosenProfile(profile.user)\r\n            props.history.push(`/profile/${profile._id}`)\r\n        }\r\n    }, [props.history,profile]);\r\n\r\n\r\n    return (\r\n        <Flex mx='200' direction=\"column\">\r\n                        {/** Here gooes editing form */}\r\n                        <form onSubmit={onSubmit}>\r\n                        <Flex direction=\"column\">\r\n                             <Heading>Full Name</Heading>\r\n                             <Input type=\"text\" name=\"fullName\" placeholder=\"Full Name\" value={editedProfile.fullName} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                        <Flex direction=\"column\">\r\n                             <Heading>Bio</Heading>\r\n                             <Textarea type=\"text\" name=\"description\" placeholder=\"Bio\" value={editedProfile.description} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                    \r\n                    <Flex direction=\"row\">\r\n                               <Box>\r\n                                <Heading>Languages</Heading>\r\n                                <Select name=\"languages\" placeholder=\"Select option\" multiple height='100px' width=\"300px\" value={editedProfile.languages} onChange={onChangeSelectLanguage}>\r\n                                    <option value=\"German\">German</option>\r\n                                    <option value=\"English\">English</option>\r\n                                    <option value=\"French\">French</option>\r\n                                    <option value=\"Dutch\">Dutch</option>\r\n                                    <option value=\"Italian\">Italian</option>\r\n                                </Select>  \r\n                                </Box>\r\n\r\n                                <Spacer />\r\n\r\n                                <Box>\r\n                                <Heading>Hobbies</Heading>\r\n                                <Select name=\"hobbies\" placeholder=\"Select option\" multiple height='100px' width=\"300px\" value={editedProfile.hobbies} onChange={onChangeSelectHobby}>\r\n                                    <option value=\"Football\">Football</option>\r\n                                    <option value=\"Skydiving\">Skydiving</option>\r\n                                    <option value=\"Swimming\">Swimming</option>\r\n                                    <option value=\"Tennis\">Tennis</option>\r\n                                    <option value=\"Art\">Art</option>\r\n                                </Select>  \r\n                                </Box>\r\n\r\n                    </Flex>\r\n                        \r\n                        <Flex direction=\"column\">\r\n                             <Heading>Address</Heading>\r\n                             <Textarea type=\"text\" name=\"address\" placeholder=\"Address\" value={editedProfile.address} onChange={onChangeEdited} />\r\n                        </Flex>\r\n\r\n                        <Flex direction=\"column\">\r\n                             <Heading>City</Heading>\r\n                             <Input type=\"text\" name=\"city\" placeholder=\"City\" value={editedProfile.city} onChange={onChangeEdited} />\r\n                        </Flex>\r\n                        <Box>\r\n                        <Heading>Birthday</Heading>\r\n                        <Flex direction=\"row\">\r\n                        <Input type=\"number\" name=\"day\" placeholder=\"Day\" value={editedBirthday.day} onChange={onChangeEditedBirthday} />\r\n                        <Input type=\"number\" name=\"month\" placeholder=\"Month\" value={editedBirthday.month} onChange={onChangeEditedBirthday} />\r\n                        <Input type=\"number\" name=\"year\" placeholder=\"Year\" value={editedBirthday.year} onChange={onChangeEditedBirthday} />\r\n                        </Flex>\r\n                        </Box>\r\n                        <br />\r\n                        <Button type=\"submit\" marginRight='6px'>\r\n                                <Icon color=\"#C62828\" w={8} h={8} as={MdSave} />\r\n                                <Text>Save Changes</Text>\r\n                        </Button>\r\n                        </form>\r\n                </Flex> \r\n    )\r\n}\r\n\r\nexport default AddProfile\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Recommandations.js",["136","137","138","139"],"import React,{useContext,useRef,useEffect,useState} from 'react'\r\nimport AppContext from '../context/app/AppContext'\r\nimport {useDisclosure,Image,Select,Center,Box,Flex,Heading,Input,InputGroup,InputLeftElement,Icon, Button, Collapse, Text} from '@chakra-ui/react'\r\nimport {AddIcon} from '@chakra-ui/icons'\r\nimport { MdMyLocation } from 'react-icons/md'\r\nimport Recommandation from './Recommandation'\r\n\r\nconst Recommandations = () => {\r\n\r\n    let hiddenInput = null\r\n    const [fileInputState, setFileInputState] = useState('')\r\n\r\n    const [previewSource, setPreviewSource] = useState('')\r\n\r\n    const [selectedFile, setSelectedFile] = useState()\r\n\r\n    useEffect(() => {\r\n        if(previewSource != ''){\r\n            setRec({...rec,picture:previewSource})\r\n        }\r\n    }, [previewSource]);\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file instanceof Blob){\r\n            previewFile(file);\r\n        setSelectedFile(file);\r\n        setFileInputState(e.target.value);\r\n        }else{\r\n            setPreviewSource('');\r\n            setFileInputState('');\r\n        }\r\n        \r\n    }\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        };\r\n    }\r\n    const [rec, setRec] = useState('')\r\n\r\n    const onChangeRec = e => {\r\n        setRec({...rec,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if (!selectedFile) return;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(selectedFile);\r\n        reader.onloadend = () => {\r\n            addRecommandation(rec).then(() => getAllRecommandations())\r\n            setFileInputState('')\r\n            setPreviewSource('')\r\n            setRec({})\r\n            onToggle()\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    const appContext = useContext(AppContext)\r\n    const {getAllRecommandations,addRecommandation,\r\n        recommandations,filteredRecommandations,clearFilterRec,\r\n            filterRecByTheme,\r\n            filterRecByLocation} = appContext\r\n\r\n    const textLoc = useRef('')\r\n    const textTheme = useRef('')\r\n\r\n    const { isOpen, onToggle } = useDisclosure()\r\n\r\n    useEffect(() => {\r\n        getAllRecommandations()\r\n    }, [])\r\n\r\n\r\n    const onChangeLoc = e => {\r\n        if(textLoc.current.value !== ''){\r\n            filterRecByLocation(e.target.value)\r\n        }\r\n        else{\r\n            clearFilterRec()\r\n        }\r\n    }\r\n\r\n    const onChangeTheme = e => {\r\n        if(textTheme.current.value !== ''){\r\n            filterRecByTheme(e.target.value)\r\n        }\r\n        else{\r\n            clearFilterRec()\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n        {/*/Filters */}\r\n\r\n        <Box textAlign=\"center\">\r\n            <Heading>Search For Recommandation</Heading>\r\n          </Box>\r\n          <br />\r\n         <Center>\r\n          <Flex gridColumnGap={4} gridRowGap={4}\r\n          justify={[\"center\", \"space-between\", \"flex-end\", \"flex-end\"]}\r\n          direction={[\"column\", \"row\", \"row\", \"row\"]}\r\n          pt={[4, 4, 0, 0]} spacing={3}>\r\n                <InputGroup>\r\n                    <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<Icon color=\"gray.300\" as={MdMyLocation} />}\r\n                    />\r\n                    <Input type=\"text\" placeholder=\"Location/City\" ref={textLoc} onChange={onChangeLoc} />\r\n                </InputGroup>\r\n\r\n                <InputGroup>\r\n                    <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<Icon color=\"gray.300\" />}\r\n                    />\r\n                    <Input type=\"text\" placeholder=\"Theme\" ref={textTheme} onChange={onChangeTheme} />\r\n                </InputGroup>\r\n\r\n            </Flex>\r\n            </Center>\r\n        <br />\r\n       <Center><Button onClick={onToggle}>Add Recommandation</Button></Center> \r\n        <br />\r\n\r\n        {/* Add Recommandation */}\r\n        <form onSubmit={onSubmit}>\r\n            <Center>\r\n                <Collapse in={isOpen} animateOpacity>\r\n                    <Box\r\n                    p=\"40px\"\r\n                    color=\"white\"\r\n                    mt=\"4\"\r\n                    bg=\"#263238\"\r\n                    rounded=\"md\"\r\n                    shadow=\"md\"\r\n                    >\r\n                         <Input type=\"text\" placeholder=\"Description\" name=\"description\" value={rec.description} onChange={onChangeRec} />\r\n                 <br />  <Input type=\"text\" placeholder=\"City\" name=\"city\" value={rec.city} onChange={onChangeRec} />\r\n                 <br />  <Input type=\"text\" placeholder=\"Address\" name=\"location\" value={rec.location} onChange={onChangeRec} />\r\n                 <br />  <Select placeholder=\"Select a theme\" name=\"theme\" value={rec.theme} onChange={onChangeRec}>\r\n                            <option value=\"Food\">Food</option>\r\n                            <option value=\"Hotel\">Hotel</option>\r\n                            <option value=\"Monuments\">Monuments</option>\r\n                            <option value=\"Restaurants\">Restaurants</option>\r\n                            <option value=\"Museums\">Museums</option>\r\n                            <option value=\"Parks\">Parks</option>\r\n                            <option value=\"Beaches\">Beaches</option>\r\n                            <option value=\"Nature\">Nature</option>\r\n                            <option value=\"Amusement Parks\">Amusement Parks</option>\r\n                            <option value=\"Zoo\">Zoo</option>\r\n                            <option value=\"Lake\">Lake</option>\r\n                            <option value=\"Casino\">Casino</option>\r\n                            <option value=\"Mountain\">Mountain</option>\r\n                         </Select>\r\n\r\n                           {/** Recommandation image add button */}\r\n                                                                        \r\n                                        <Input  \r\n                                        type=\"file\" \r\n                                        hidden\r\n                                        ref={el => hiddenInput = el}\r\n                                        id=\"fileInput\"\r\n                                        class=\"form-control-file\" \r\n                                        onChange={handleFileInputChange}\r\n                                        value={fileInputState}\r\n                                        />\r\n                                        {/** Recommandation image load button */}\r\n                                        \r\n                                         <Center>\r\n                                             <Button leftIcon={<AddIcon />} onClick={() => hiddenInput.click()} colorScheme=\"blue\" variant=\"outline\">\r\n                                                Add Image\r\n                                            </Button>\r\n                                         </Center>\r\n                                          {/** Preview of photo */}\r\n                                    {previewSource && (\r\n                                        <Center>\r\n                                        <Flex direction=\"column\">\r\n                                        \r\n                                             <Image\r\n                                        src={previewSource}\r\n                                        alt=\"chosen\"\r\n                                        boxSize=\"300px\"\r\n                                    />    \r\n                                   </Flex></Center>\r\n                                )}\r\n<br />\r\n                   <Center><Button type=\"submit\">Recommend !</Button></Center>     \r\n                    \r\n                    </Box>\r\n                </Collapse>\r\n            </Center></form>\r\n\r\n             {/* Recommandation list */}\r\n        \r\n        {recommandations !== null ? (\r\n            <Center>\r\n\r\n            \r\n        <Box minH=\"60vh\" mb=\"5\" w=\"800px\">\r\n          {filteredRecommandations !== null\r\n            ? filteredRecommandations.map(frec => (\r\n\r\n                  <Recommandation rec={frec} />\r\n                \r\n              ))\r\n            : recommandations.map(rec => (\r\n                \r\n                  <Recommandation rec={rec} />\r\n                \r\n              ))}\r\n        </Box>\r\n        </Center>\r\n      ):<p>loading...</p>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Recommandations\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Recommandation.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Questions.js",["140","141","142","143"],"import React,{useContext,useRef,useEffect,useState} from 'react'\r\nimport AppContext from '../context/app/AppContext'\r\nimport {useDisclosure,Image,Select,Center,Box,Flex,Heading,Input,InputGroup,InputLeftElement,Icon, Button, Collapse, Text} from '@chakra-ui/react'\r\nimport {AddIcon} from '@chakra-ui/icons'\r\nimport { MdMyLocation } from 'react-icons/md'\r\nimport Question from './Question'\r\n\r\nconst Questions = () => {\r\n\r\n    const appContext = useContext(AppContext)\r\n    const {getAllQuestions,addQuestion,\r\n        questions,filteredQuestions,clearFilterQue,\r\n            filterQueByTheme,\r\n            filterQueByLocation} = appContext\r\n            useEffect(() => {\r\n               getAllQuestions()\r\n            }, []);\r\n            \r\n    let hiddenInput = null\r\n    const [fileInputState, setFileInputState] = useState('')\r\n\r\n    const [previewSource, setPreviewSource] = useState('')\r\n\r\n    const [selectedFile, setSelectedFile] = useState()\r\n\r\n    useEffect(() => {\r\n        if(previewSource != ''){\r\n            setRec({...rec,picture:previewSource})\r\n        }\r\n    }, [previewSource]);\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file instanceof Blob){\r\n            previewFile(file);\r\n        setSelectedFile(file);\r\n        setFileInputState(e.target.value);\r\n        }else{\r\n            setPreviewSource('');\r\n            setFileInputState('');\r\n        }\r\n        \r\n    }\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        };\r\n    }\r\n    const [rec, setRec] = useState('')\r\n\r\n    const onChangeRec = e => {\r\n        setRec({...rec,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if (!selectedFile) return;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(selectedFile);\r\n        reader.onloadend = () => {\r\n            addQuestion(rec).then(() => getAllQuestions())\r\n            setFileInputState('')\r\n            setPreviewSource('')\r\n            setRec({})\r\n            onToggle()\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    \r\n\r\n    const textLoc = useRef('')\r\n    const textTheme = useRef('')\r\n\r\n    const { isOpen, onToggle } = useDisclosure()\r\n\r\n\r\n    const onChangeLoc = e => {\r\n        if(textLoc.current.value !== ''){\r\n            filterQueByLocation(e.target.value)\r\n        }\r\n        else{\r\n            clearFilterQue()\r\n        }\r\n    }\r\n\r\n    const onChangeTheme = e => {\r\n        if(textTheme.current.value !== ''){\r\n            filterQueByTheme(e.target.value)\r\n        }\r\n        else{\r\n            clearFilterQue()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {/*/Filters */}\r\n\r\n        <Box textAlign=\"center\">\r\n            <Heading>Search For Questions</Heading>\r\n          </Box>\r\n          <br />\r\n         <Center>\r\n          <Flex gridColumnGap={4} gridRowGap={4}\r\n          justify={[\"center\", \"space-between\", \"flex-end\", \"flex-end\"]}\r\n          direction={[\"column\", \"row\", \"row\", \"row\"]}\r\n          pt={[4, 4, 0, 0]} spacing={3}>\r\n                <InputGroup>\r\n                    <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<Icon color=\"gray.300\" as={MdMyLocation} />}\r\n                    />\r\n                    <Input type=\"text\" placeholder=\"Location/City\" ref={textLoc} onChange={onChangeLoc} />\r\n                </InputGroup>\r\n\r\n                <InputGroup>\r\n                    <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<Icon color=\"gray.300\" />}\r\n                    />\r\n                    <Input type=\"text\" placeholder=\"Theme\" ref={textTheme} onChange={onChangeTheme} />\r\n                </InputGroup>\r\n\r\n            </Flex>\r\n            </Center>\r\n        <br />\r\n       <Center><Button onClick={onToggle}>Add Question</Button></Center> \r\n        <br />\r\n\r\n        {/* Add Question */}\r\n        <form onSubmit={onSubmit}>\r\n            <Center>\r\n                <Collapse in={isOpen} animateOpacity>\r\n                    <Box\r\n                    p=\"40px\"\r\n                    color=\"white\"\r\n                    mt=\"4\"\r\n                    bg=\"#263238\"\r\n                    rounded=\"md\"\r\n                    shadow=\"md\"\r\n                    >\r\n                         <Input type=\"text\" placeholder=\"Description\" name=\"description\" value={rec.description} onChange={onChangeRec} />\r\n                 <br />  <Input type=\"text\" placeholder=\"City\" name=\"city\" value={rec.city} onChange={onChangeRec} />\r\n                 <br />  <Input type=\"text\" placeholder=\"Address\" name=\"location\" value={rec.location} onChange={onChangeRec} />\r\n                 <br />  <Select placeholder=\"Select a theme\" name=\"theme\" value={rec.theme} onChange={onChangeRec}>\r\n                            <option value=\"Food\">Food</option>\r\n                            <option value=\"Hotel\">Hotel</option>\r\n                            <option value=\"Monuments\">Monuments</option>\r\n                            <option value=\"Restaurants\">Restaurants</option>\r\n                            <option value=\"Museums\">Museums</option>\r\n                            <option value=\"Parks\">Parks</option>\r\n                            <option value=\"Beaches\">Beaches</option>\r\n                            <option value=\"Nature\">Nature</option>\r\n                            <option value=\"Amusement Parks\">Amusement Parks</option>\r\n                            <option value=\"Zoo\">Zoo</option>\r\n                            <option value=\"Lake\">Lake</option>\r\n                            <option value=\"Casino\">Casino</option>\r\n                            <option value=\"Mountain\">Mountain</option>\r\n                         </Select>\r\n\r\n                           {/** Recommandation image add button */}\r\n                                                                        \r\n                                        <Input  \r\n                                        type=\"file\" \r\n                                        hidden\r\n                                        ref={el => hiddenInput = el}\r\n                                        id=\"fileInput\"\r\n                                        class=\"form-control-file\" \r\n                                        onChange={handleFileInputChange}\r\n                                        value={fileInputState}\r\n                                        />\r\n                                        {/** Recommandation image load button */}\r\n                                        \r\n                                         <Center>\r\n                                             <Button leftIcon={<AddIcon />} onClick={() => hiddenInput.click()} colorScheme=\"blue\" variant=\"outline\">\r\n                                                Add Image\r\n                                            </Button>\r\n                                         </Center>\r\n                                          {/** Preview of photo */}\r\n                                    {previewSource && (\r\n                                        <Center>\r\n                                        <Flex direction=\"column\">\r\n                                        \r\n                                             <Image\r\n                                        src={previewSource}\r\n                                        alt=\"chosen\"\r\n                                        boxSize=\"300px\"\r\n                                    />    \r\n                                   </Flex></Center>\r\n                                )}\r\n<br />\r\n                   <Center><Button type=\"submit\">Ask !</Button></Center>     \r\n                    \r\n                    </Box>\r\n                </Collapse>\r\n            </Center></form>\r\n\r\n             {/* Question list */}\r\n        \r\n        {questions !== null ? (\r\n            <Center>\r\n\r\n            \r\n        <Box minH=\"60vh\" mb=\"5\" w=\"800px\">\r\n          {filteredQuestions !== null\r\n            ? filteredQuestions.map(fque => (\r\n\r\n                  <Question que={fque} />\r\n                \r\n              ))\r\n            : questions.map(que => (\r\n                \r\n                  <Question que={que} />\r\n                \r\n              ))}\r\n        </Box>\r\n        </Center>\r\n      ):<p>loading...</p>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Questions\r\n","C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Question.js",[],"C:\\Users\\Oussama\\Desktop\\React Apps\\platine\\client\\src\\components\\Meetings.js",["144","145","146","147","148","149","150","151","152","153","154","155","156"],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":16,"column":40,"nodeType":"163","messageId":"164","endLine":16,"endColumn":44},{"ruleId":"165","severity":1,"message":"166","line":39,"column":36,"nodeType":"167","messageId":"168","endLine":39,"endColumn":38},{"ruleId":"169","severity":1,"message":"170","line":45,"column":8,"nodeType":"171","endLine":45,"endColumn":31,"suggestions":"172"},{"ruleId":"165","severity":1,"message":"166","line":45,"column":33,"nodeType":"167","messageId":"168","endLine":45,"endColumn":35},{"ruleId":"161","severity":1,"message":"173","line":81,"column":14,"nodeType":"163","messageId":"164","endLine":81,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":11,"column":1,"nodeType":"176","endLine":65,"endColumn":2},{"ruleId":"169","severity":1,"message":"177","line":44,"column":8,"nodeType":"171","endLine":44,"endColumn":10,"suggestions":"178"},{"ruleId":"165","severity":1,"message":"166","line":176,"column":74,"nodeType":"167","messageId":"168","endLine":176,"endColumn":76},{"ruleId":"161","severity":1,"message":"179","line":3,"column":43,"nodeType":"163","messageId":"164","endLine":3,"endColumn":54},{"ruleId":"161","severity":1,"message":"180","line":3,"column":56,"nodeType":"163","messageId":"164","endLine":3,"endColumn":66},{"ruleId":"161","severity":1,"message":"181","line":3,"column":73,"nodeType":"163","messageId":"164","endLine":3,"endColumn":78},{"ruleId":"161","severity":1,"message":"182","line":3,"column":92,"nodeType":"163","messageId":"164","endLine":3,"endColumn":103},{"ruleId":"169","severity":1,"message":"183","line":31,"column":8,"nodeType":"171","endLine":31,"endColumn":10,"suggestions":"184"},{"ruleId":"169","severity":1,"message":"185","line":46,"column":8,"nodeType":"171","endLine":46,"endColumn":23,"suggestions":"186"},{"ruleId":"165","severity":1,"message":"166","line":209,"column":61,"nodeType":"167","messageId":"168","endLine":209,"endColumn":63},{"ruleId":"165","severity":1,"message":"166","line":266,"column":112,"nodeType":"167","messageId":"168","endLine":266,"endColumn":114},{"ruleId":"165","severity":1,"message":"166","line":294,"column":105,"nodeType":"167","messageId":"168","endLine":294,"endColumn":107},{"ruleId":"165","severity":1,"message":"166","line":367,"column":61,"nodeType":"167","messageId":"168","endLine":367,"endColumn":63},{"ruleId":"161","severity":1,"message":"187","line":1,"column":30,"nodeType":"163","messageId":"164","endLine":1,"endColumn":40},{"ruleId":"174","severity":1,"message":"175","line":14,"column":1,"nodeType":"176","endLine":109,"endColumn":2},{"ruleId":"188","severity":1,"message":"189","line":15,"column":5,"nodeType":"190","messageId":"191","endLine":105,"endColumn":6},{"ruleId":"161","severity":1,"message":"162","line":12,"column":12,"nodeType":"163","messageId":"164","endLine":12,"endColumn":16},{"ruleId":"169","severity":1,"message":"192","line":75,"column":8,"nodeType":"171","endLine":75,"endColumn":31,"suggestions":"193"},{"ruleId":"161","severity":1,"message":"194","line":3,"column":118,"nodeType":"163","messageId":"164","endLine":3,"endColumn":122},{"ruleId":"165","severity":1,"message":"195","line":18,"column":26,"nodeType":"167","messageId":"168","endLine":18,"endColumn":28},{"ruleId":"169","severity":1,"message":"196","line":21,"column":8,"nodeType":"171","endLine":21,"endColumn":23,"suggestions":"197"},{"ruleId":"169","severity":1,"message":"198","line":77,"column":8,"nodeType":"171","endLine":77,"endColumn":10,"suggestions":"199"},{"ruleId":"161","severity":1,"message":"194","line":3,"column":118,"nodeType":"163","messageId":"164","endLine":3,"endColumn":122},{"ruleId":"169","severity":1,"message":"200","line":17,"column":16,"nodeType":"171","endLine":17,"endColumn":18,"suggestions":"201"},{"ruleId":"165","severity":1,"message":"195","line":27,"column":26,"nodeType":"167","messageId":"168","endLine":27,"endColumn":28},{"ruleId":"169","severity":1,"message":"196","line":30,"column":8,"nodeType":"171","endLine":30,"endColumn":23,"suggestions":"202"},{"ruleId":"161","severity":1,"message":"203","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":17},{"ruleId":"161","severity":1,"message":"204","line":9,"column":55,"nodeType":"163","messageId":"164","endLine":9,"endColumn":68},{"ruleId":"169","severity":1,"message":"205","line":16,"column":8,"nodeType":"171","endLine":16,"endColumn":10,"suggestions":"206"},{"ruleId":"165","severity":1,"message":"166","line":32,"column":32,"nodeType":"167","messageId":"168","endLine":32,"endColumn":34},{"ruleId":"165","severity":1,"message":"166","line":57,"column":104,"nodeType":"167","messageId":"168","endLine":57,"endColumn":106},{"ruleId":"165","severity":1,"message":"166","line":74,"column":33,"nodeType":"167","messageId":"168","endLine":74,"endColumn":35},{"ruleId":"165","severity":1,"message":"166","line":86,"column":16,"nodeType":"167","messageId":"168","endLine":86,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":108,"column":32,"nodeType":"167","messageId":"168","endLine":108,"endColumn":34},{"ruleId":"165","severity":1,"message":"166","line":133,"column":104,"nodeType":"167","messageId":"168","endLine":133,"endColumn":106},{"ruleId":"165","severity":1,"message":"166","line":150,"column":33,"nodeType":"167","messageId":"168","endLine":150,"endColumn":35},{"ruleId":"165","severity":1,"message":"166","line":184,"column":32,"nodeType":"167","messageId":"168","endLine":184,"endColumn":34},{"ruleId":"165","severity":1,"message":"166","line":209,"column":104,"nodeType":"167","messageId":"168","endLine":209,"endColumn":106},{"ruleId":"165","severity":1,"message":"166","line":226,"column":33,"nodeType":"167","messageId":"168","endLine":226,"endColumn":35},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["209"],"'res' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array.",["210"],"'AvatarBadge' is defined but never used.","'IconButton' is defined but never used.","'Image' is defined but never used.","'ModalFooter' is defined but never used.","React Hook useEffect has missing dependencies: 'getChosenProfile' and 'params.id'. Either include them or remove the dependency array.",["211"],"React Hook useEffect has missing dependencies: 'editedBirthday' and 'editedProfile'. Either include them or remove the dependency array. You can also do a functional update 'setEditedProfile(e => ...)' if you only need 'editedProfile' in the 'setEditedProfile' call.",["212"],"'useContext' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'getChosenProfile'. Either include it or remove the dependency array.",["213"],"'Text' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'rec'. Either include it or remove the dependency array. You can also do a functional update 'setRec(r => ...)' if you only need 'rec' in the 'setRec' call.",["214"],"React Hook useEffect has a missing dependency: 'getAllRecommandations'. Either include it or remove the dependency array.",["215"],"React Hook useEffect has a missing dependency: 'getAllQuestions'. Either include it or remove the dependency array.",["216"],["217"],"'MdClose' is defined but never used.","'finishMeeting' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserMeetings'. Either include it or remove the dependency array.",["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"229","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [error, isAuthenticated, props.history]",{"range":"238","text":"239"},"Update the dependencies array to be: [getProfiles]",{"range":"240","text":"241"},"Update the dependencies array to be: [getChosenProfile, params.id]",{"range":"242","text":"243"},"Update the dependencies array to be: [chosenProfile, editedBirthday, editedProfile]",{"range":"244","text":"245"},"Update the dependencies array to be: [props.history, profile, getChosenProfile]",{"range":"246","text":"247"},"Update the dependencies array to be: [previewSource, rec]",{"range":"248","text":"249"},"Update the dependencies array to be: [getAllRecommandations]",{"range":"250","text":"251"},"Update the dependencies array to be: [getAllQuestions]",{"range":"252","text":"253"},{"range":"254","text":"249"},"Update the dependencies array to be: [getUserMeetings]",{"range":"255","text":"256"},[1012,1035],"[error, isAuthenticated, props.history]",[1529,1531],"[getProfiles]",[1347,1349],"[getChosenProfile, params.id]",[1821,1836],"[chosenProfile, editedBirthday, editedProfile]",[2387,2410],"[props.history, profile, getChosenProfile]",[778,793],"[previewSource, rec]",[2371,2373],"[getAllRecommandations]",[720,722],"[getAllQuestions]",[1079,1094],[607,609],"[getUserMeetings]"]